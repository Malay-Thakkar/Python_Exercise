[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "signup",
        "importPath": "ecm.models",
        "description": "ecm.models",
        "isExtraImport": true,
        "detail": "ecm.models",
        "documentation": {}
    },
    {
        "label": "contact",
        "importPath": "ecm.models",
        "description": "ecm.models",
        "isExtraImport": true,
        "detail": "ecm.models",
        "documentation": {}
    },
    {
        "label": "product",
        "importPath": "ecm.models",
        "description": "ecm.models",
        "isExtraImport": true,
        "detail": "ecm.models",
        "documentation": {}
    },
    {
        "label": "stock",
        "importPath": "ecm.models",
        "description": "ecm.models",
        "isExtraImport": true,
        "detail": "ecm.models",
        "documentation": {}
    },
    {
        "label": "signup",
        "importPath": "ecm.models",
        "description": "ecm.models",
        "isExtraImport": true,
        "detail": "ecm.models",
        "documentation": {}
    },
    {
        "label": "contact",
        "importPath": "ecm.models",
        "description": "ecm.models",
        "isExtraImport": true,
        "detail": "ecm.models",
        "documentation": {}
    },
    {
        "label": "products",
        "importPath": "ecm.models",
        "description": "ecm.models",
        "isExtraImport": true,
        "detail": "ecm.models",
        "documentation": {}
    },
    {
        "label": "stock",
        "importPath": "ecm.models",
        "description": "ecm.models",
        "isExtraImport": true,
        "detail": "ecm.models",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "JSONRenderer",
        "importPath": "rest_framework.renderers",
        "description": "rest_framework.renderers",
        "isExtraImport": true,
        "detail": "rest_framework.renderers",
        "documentation": {}
    },
    {
        "label": "JSONRenderer",
        "importPath": "rest_framework.renderers",
        "description": "rest_framework.renderers",
        "isExtraImport": true,
        "detail": "rest_framework.renderers",
        "documentation": {}
    },
    {
        "label": "JSONRenderer",
        "importPath": "rest_framework.renderers",
        "description": "rest_framework.renderers",
        "isExtraImport": true,
        "detail": "rest_framework.renderers",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "signup",
        "importPath": "crud.models",
        "description": "crud.models",
        "isExtraImport": true,
        "detail": "crud.models",
        "documentation": {}
    },
    {
        "label": "contact",
        "importPath": "crud.models",
        "description": "crud.models",
        "isExtraImport": true,
        "detail": "crud.models",
        "documentation": {}
    },
    {
        "label": "product",
        "importPath": "crud.models",
        "description": "crud.models",
        "isExtraImport": true,
        "detail": "crud.models",
        "documentation": {}
    },
    {
        "label": "stock",
        "importPath": "crud.models",
        "description": "crud.models",
        "isExtraImport": true,
        "detail": "crud.models",
        "documentation": {}
    },
    {
        "label": "signup",
        "importPath": "crud.models",
        "description": "crud.models",
        "isExtraImport": true,
        "detail": "crud.models",
        "documentation": {}
    },
    {
        "label": "contact",
        "importPath": "crud.models",
        "description": "crud.models",
        "isExtraImport": true,
        "detail": "crud.models",
        "documentation": {}
    },
    {
        "label": "product",
        "importPath": "crud.models",
        "description": "crud.models",
        "isExtraImport": true,
        "detail": "crud.models",
        "documentation": {}
    },
    {
        "label": "stock",
        "importPath": "crud.models",
        "description": "crud.models",
        "isExtraImport": true,
        "detail": "crud.models",
        "documentation": {}
    },
    {
        "label": "signup",
        "importPath": "crud.models",
        "description": "crud.models",
        "isExtraImport": true,
        "detail": "crud.models",
        "documentation": {}
    },
    {
        "label": "contact",
        "importPath": "crud.models",
        "description": "crud.models",
        "isExtraImport": true,
        "detail": "crud.models",
        "documentation": {}
    },
    {
        "label": "product",
        "importPath": "crud.models",
        "description": "crud.models",
        "isExtraImport": true,
        "detail": "crud.models",
        "documentation": {}
    },
    {
        "label": "stock",
        "importPath": "crud.models",
        "description": "crud.models",
        "isExtraImport": true,
        "detail": "crud.models",
        "documentation": {}
    },
    {
        "label": "Task",
        "importPath": "crud.models",
        "description": "crud.models",
        "isExtraImport": true,
        "detail": "crud.models",
        "documentation": {}
    },
    {
        "label": "signup",
        "importPath": "crud.models",
        "description": "crud.models",
        "isExtraImport": true,
        "detail": "crud.models",
        "documentation": {}
    },
    {
        "label": "contact",
        "importPath": "crud.models",
        "description": "crud.models",
        "isExtraImport": true,
        "detail": "crud.models",
        "documentation": {}
    },
    {
        "label": "product",
        "importPath": "crud.models",
        "description": "crud.models",
        "isExtraImport": true,
        "detail": "crud.models",
        "documentation": {}
    },
    {
        "label": "stock",
        "importPath": "crud.models",
        "description": "crud.models",
        "isExtraImport": true,
        "detail": "crud.models",
        "documentation": {}
    },
    {
        "label": "Task",
        "importPath": "crud.models",
        "description": "crud.models",
        "isExtraImport": true,
        "detail": "crud.models",
        "documentation": {}
    },
    {
        "label": "stockForm",
        "importPath": "crud.forms",
        "description": "crud.forms",
        "isExtraImport": true,
        "detail": "crud.forms",
        "documentation": {}
    },
    {
        "label": "ProductForm",
        "importPath": "crud.forms",
        "description": "crud.forms",
        "isExtraImport": true,
        "detail": "crud.forms",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "csv",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "csv",
        "description": "csv",
        "detail": "csv",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "pytz",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytz",
        "description": "pytz",
        "detail": "pytz",
        "documentation": {}
    },
    {
        "label": "pandas",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pandas",
        "description": "pandas",
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "calendar",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "calendar",
        "description": "calendar",
        "detail": "calendar",
        "documentation": {}
    },
    {
        "label": "math",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "math",
        "description": "math",
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "pi",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "os.path",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os.path",
        "description": "os.path",
        "detail": "os.path",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "django.learning.demo_project1.mysite.ecm.migrations.0001_initial",
        "description": "django.learning.demo_project1.mysite.ecm.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='contact',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=120)),",
        "detail": "django.learning.demo_project1.mysite.ecm.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "django.learning.demo_project1.mysite.ecm.migrations.0002_alter_signup_options_rename_emai_signup_email_and_more",
        "description": "django.learning.demo_project1.mysite.ecm.migrations.0002_alter_signup_options_rename_emai_signup_email_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('ecm', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='signup',\n            options={},\n        ),\n        migrations.RenameField(",
        "detail": "django.learning.demo_project1.mysite.ecm.migrations.0002_alter_signup_options_rename_emai_signup_email_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "django.learning.demo_project1.mysite.ecm.migrations.0003_contact",
        "description": "django.learning.demo_project1.mysite.ecm.migrations.0003_contact",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('ecm', '0002_alter_signup_options_rename_emai_signup_email_and_more'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='contact',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=120)),",
        "detail": "django.learning.demo_project1.mysite.ecm.migrations.0003_contact",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "django.learning.demo_project1.mysite.ecm.migrations.0004_product",
        "description": "django.learning.demo_project1.mysite.ecm.migrations.0004_product",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('ecm', '0003_contact'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='product',\n            fields=[\n                ('product_name', models.CharField(max_length=120)),\n                ('product_id', models.CharField(max_length=120, primary_key=True, serialize=False)),",
        "detail": "django.learning.demo_project1.mysite.ecm.migrations.0004_product",
        "documentation": {}
    },
    {
        "label": "EcmConfig",
        "kind": 6,
        "importPath": "django.learning.demo_project1.mysite.ecm.apps",
        "description": "django.learning.demo_project1.mysite.ecm.apps",
        "peekOfCode": "class EcmConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'ecm'",
        "detail": "django.learning.demo_project1.mysite.ecm.apps",
        "documentation": {}
    },
    {
        "label": "stockForm",
        "kind": 6,
        "importPath": "django.learning.demo_project1.mysite.ecm.forms",
        "description": "django.learning.demo_project1.mysite.ecm.forms",
        "peekOfCode": "class stockForm(forms.Form):\n    product_name=forms.CharField(max_length=120)\n    product_id=forms.CharField(max_length=120)\n    product_price=forms.CharField(max_length=120)\nclass productForm(forms.Form):\n    product_name=forms.CharField(max_length=120)\n    product_id=forms.CharField(max_length=120)\n    product_dict=forms.CharField(max_length=120)\n    product_price=forms.CharField(max_length=120)\n    product_img=forms.FileField(max_length=120)",
        "detail": "django.learning.demo_project1.mysite.ecm.forms",
        "documentation": {}
    },
    {
        "label": "productForm",
        "kind": 6,
        "importPath": "django.learning.demo_project1.mysite.ecm.forms",
        "description": "django.learning.demo_project1.mysite.ecm.forms",
        "peekOfCode": "class productForm(forms.Form):\n    product_name=forms.CharField(max_length=120)\n    product_id=forms.CharField(max_length=120)\n    product_dict=forms.CharField(max_length=120)\n    product_price=forms.CharField(max_length=120)\n    product_img=forms.FileField(max_length=120)",
        "detail": "django.learning.demo_project1.mysite.ecm.forms",
        "documentation": {}
    },
    {
        "label": "signup",
        "kind": 6,
        "importPath": "django.learning.demo_project1.mysite.ecm.models",
        "description": "django.learning.demo_project1.mysite.ecm.models",
        "peekOfCode": "class signup(models.Model):\n    name=models.CharField(max_length=120)\n    contact=models.CharField(max_length=12)\n    address=models.CharField(max_length=120)\n    email=models.EmailField()\n    city=models.CharField(max_length=10)\n    state=models.CharField(max_length=10)\n    zip=models.CharField(max_length=10)\n    tandc=models.CharField(max_length=10)\n    date=models.DateField()",
        "detail": "django.learning.demo_project1.mysite.ecm.models",
        "documentation": {}
    },
    {
        "label": "contact",
        "kind": 6,
        "importPath": "django.learning.demo_project1.mysite.ecm.models",
        "description": "django.learning.demo_project1.mysite.ecm.models",
        "peekOfCode": "class contact(models.Model):\n    name=models.CharField(max_length=120)\n    contact=models.CharField(max_length=12)\n    address=models.CharField(max_length=120)\n    email=models.EmailField()\n    tandc=models.CharField(max_length=10)\n    date=models.DateField()\nclass product(models.Model):\n    product_name=models.CharField(max_length=120)\n    product_id=models.CharField(max_length=120)",
        "detail": "django.learning.demo_project1.mysite.ecm.models",
        "documentation": {}
    },
    {
        "label": "product",
        "kind": 6,
        "importPath": "django.learning.demo_project1.mysite.ecm.models",
        "description": "django.learning.demo_project1.mysite.ecm.models",
        "peekOfCode": "class product(models.Model):\n    product_name=models.CharField(max_length=120)\n    product_id=models.CharField(max_length=120)\n    product_dict=models.CharField(max_length=120)\n    product_price=models.CharField(max_length=120)\n    product_img=models.FileField(max_length=120)\nclass products(models.Model):\n    product_name=models.CharField(max_length=120)\n    product_id=models.CharField(max_length=120)\n    product_dict=models.CharField(max_length=120)",
        "detail": "django.learning.demo_project1.mysite.ecm.models",
        "documentation": {}
    },
    {
        "label": "products",
        "kind": 6,
        "importPath": "django.learning.demo_project1.mysite.ecm.models",
        "description": "django.learning.demo_project1.mysite.ecm.models",
        "peekOfCode": "class products(models.Model):\n    product_name=models.CharField(max_length=120)\n    product_id=models.CharField(max_length=120)\n    product_dict=models.CharField(max_length=120)\n    product_price=models.CharField(max_length=120)\n    product_img=models.FileField(max_length=120)\nclass stock(models.Model):\n    product_name=models.CharField(max_length=120)\n    product_id=models.CharField(max_length=120)\n    product_price=models.CharField(max_length=120)",
        "detail": "django.learning.demo_project1.mysite.ecm.models",
        "documentation": {}
    },
    {
        "label": "stock",
        "kind": 6,
        "importPath": "django.learning.demo_project1.mysite.ecm.models",
        "description": "django.learning.demo_project1.mysite.ecm.models",
        "peekOfCode": "class stock(models.Model):\n    product_name=models.CharField(max_length=120)\n    product_id=models.CharField(max_length=120)\n    product_price=models.CharField(max_length=120)",
        "detail": "django.learning.demo_project1.mysite.ecm.models",
        "documentation": {}
    },
    {
        "label": "ProductSerializer",
        "kind": 6,
        "importPath": "django.learning.demo_project1.mysite.ecm.serializer",
        "description": "django.learning.demo_project1.mysite.ecm.serializer",
        "peekOfCode": "class ProductSerializer(serializers.Serializer):\n    product_name=serializers.CharField(max_length=120)\n    product_id=serializers.CharField(max_length=120)\n    product_dict=serializers.CharField(max_length=120)\n    product_price=serializers.CharField(max_length=120)\n    product_img=serializers.FileField(max_length=120)",
        "detail": "django.learning.demo_project1.mysite.ecm.serializer",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "django.learning.demo_project1.mysite.ecm.urls",
        "description": "django.learning.demo_project1.mysite.ecm.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.index, name=\"home\"),\n    path('signin/', views.signin, name=\"signin\"),\n    path('signup/', views.signup, name=\"signup\"),\n    path('logout/', views.logoutuser, name=\"logout\"),\n    path('about-us/', views.aboutus,name=\"about\"),\n    path('contact/', views.contact),\n    path('product/', views.product,name=\"product\"),\n    path('product/<int:productid>', views.productdetail),\n    path('stock/', views.stock, name=\"stock\"),",
        "detail": "django.learning.demo_project1.mysite.ecm.urls",
        "documentation": {}
    },
    {
        "label": "signup",
        "kind": 2,
        "importPath": "django.learning.demo_project1.mysite.ecm.views",
        "description": "django.learning.demo_project1.mysite.ecm.views",
        "peekOfCode": "def signup(request):\n    if request.method == 'POST':\n        name = request.POST.get('name')\n        contact = request.POST.get('contact')\n        address = request.POST.get('address')\n        email = request.POST.get('email')\n        city = request.POST.get('city')\n        state = request.POST.get('state')\n        zip_code = request.POST.get('zip')  \n        tandc = request.POST.get('tandc')",
        "detail": "django.learning.demo_project1.mysite.ecm.views",
        "documentation": {}
    },
    {
        "label": "contact",
        "kind": 2,
        "importPath": "django.learning.demo_project1.mysite.ecm.views",
        "description": "django.learning.demo_project1.mysite.ecm.views",
        "peekOfCode": "def contact(request):\n    if request.method == 'POST':\n        name = request.POST.get('name')\n        contact = request.POST.get('contact')\n        address = request.POST.get('address')\n        email = request.POST.get('email')\n        tandc = request.POST.get('cmo')\n        # Use SignupModel instead of signup for the model class\n        contact_entry = ContactModel(name=name, contact=contact, address=address, email=email,tandc=tandc,date=datetime.now())\n        contact_entry.save()",
        "detail": "django.learning.demo_project1.mysite.ecm.views",
        "documentation": {}
    },
    {
        "label": "signin",
        "kind": 2,
        "importPath": "django.learning.demo_project1.mysite.ecm.views",
        "description": "django.learning.demo_project1.mysite.ecm.views",
        "peekOfCode": "def signin(request):\n    if request.method == \"POST\":\n        email = request.POST.get('email')\n        password = request.POST.get('password')\n        user = authenticate(email=email, password=password)\n        if user is not None:\n            return redirect(\"/about-us\")\n        else:\n            return render(request, 'signin.html')\n    return render(request, 'signin.html')",
        "detail": "django.learning.demo_project1.mysite.ecm.views",
        "documentation": {}
    },
    {
        "label": "aboutus",
        "kind": 2,
        "importPath": "django.learning.demo_project1.mysite.ecm.views",
        "description": "django.learning.demo_project1.mysite.ecm.views",
        "peekOfCode": "def aboutus(request):\n    dict = {\n        \"name\": \"Malay Thakkar\",\n        \"mailid\": \"its.malaythakkar@gmail.com\"\n    }\n    return render(request, \"about.html\", dict)\ndef index(request):\n    if request.user.is_authenticated:\n        return redirect(\"/about-us\")\n    else:",
        "detail": "django.learning.demo_project1.mysite.ecm.views",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "django.learning.demo_project1.mysite.ecm.views",
        "description": "django.learning.demo_project1.mysite.ecm.views",
        "peekOfCode": "def index(request):\n    if request.user.is_authenticated:\n        return redirect(\"/about-us\")\n    else:\n        return render(request, 'index.html')\ndef logoutuser(request):\n    logout(request)\n    return redirect(\"/signin\")\ndef product(request):\n    product = productModel.objects.all()",
        "detail": "django.learning.demo_project1.mysite.ecm.views",
        "documentation": {}
    },
    {
        "label": "logoutuser",
        "kind": 2,
        "importPath": "django.learning.demo_project1.mysite.ecm.views",
        "description": "django.learning.demo_project1.mysite.ecm.views",
        "peekOfCode": "def logoutuser(request):\n    logout(request)\n    return redirect(\"/signin\")\ndef product(request):\n    product = productModel.objects.all()\n    serializer = ProductSerializer(product, many=True)\n    context_data = {\n        'products': serializer.data\n    }\n    return render(request,'product.html',context_data)",
        "detail": "django.learning.demo_project1.mysite.ecm.views",
        "documentation": {}
    },
    {
        "label": "product",
        "kind": 2,
        "importPath": "django.learning.demo_project1.mysite.ecm.views",
        "description": "django.learning.demo_project1.mysite.ecm.views",
        "peekOfCode": "def product(request):\n    product = productModel.objects.all()\n    serializer = ProductSerializer(product, many=True)\n    context_data = {\n        'products': serializer.data\n    }\n    return render(request,'product.html',context_data)\ndef crudproduct(request):\n    # if request.method == \"GET\":\n    #     products = productModel.objects.all()",
        "detail": "django.learning.demo_project1.mysite.ecm.views",
        "documentation": {}
    },
    {
        "label": "crudproduct",
        "kind": 2,
        "importPath": "django.learning.demo_project1.mysite.ecm.views",
        "description": "django.learning.demo_project1.mysite.ecm.views",
        "peekOfCode": "def crudproduct(request):\n    # if request.method == \"GET\":\n    #     products = productModel.objects.all()\n    #     form = productForm()  # Create an empty form\n    #     context = {\n    #         'products': products,\n    #         'form': form\n    #     }\n    #     return render(request, 'crudproduct.html', context)\n    # elif request.method == \"POST\":",
        "detail": "django.learning.demo_project1.mysite.ecm.views",
        "documentation": {}
    },
    {
        "label": "productdetail",
        "kind": 2,
        "importPath": "django.learning.demo_project1.mysite.ecm.views",
        "description": "django.learning.demo_project1.mysite.ecm.views",
        "peekOfCode": "def productdetail(request,productid):\n    product = productModel.objects.get(product_id = productid)\n    serializer = ProductSerializer(product) \n    json_data = JSONRenderer().render(serializer.data)\n    return HttpResponse(json_data,content_type='application/json')\n# def product(request):\n#     if request.method ==\"POST\":\n#         product_name = request.POST.get(product_name)\n#         product_price = request.POST.get(product_price)\n#         product_dict = request.POST.get(product_dict)",
        "detail": "django.learning.demo_project1.mysite.ecm.views",
        "documentation": {}
    },
    {
        "label": "stock",
        "kind": 2,
        "importPath": "django.learning.demo_project1.mysite.ecm.views",
        "description": "django.learning.demo_project1.mysite.ecm.views",
        "peekOfCode": "def stock(request):\n    if request.method=='POST':\n        form = stockForm(request.POST)\n        if form.is_valid():\n            product_name = form.cleaned_data['product_name']\n            product_id = form.cleaned_data['product_id']\n            product_price = form.cleaned_data['product_price']\n            new_stock = stockModel(product_name=product_name, product_id=product_id, product_price=product_price)\n            new_stock.save()\n            return HttpResponse('success')",
        "detail": "django.learning.demo_project1.mysite.ecm.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "django.learning.demo_project1.mysite.mysite.asgi",
        "description": "django.learning.demo_project1.mysite.mysite.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "django.learning.demo_project1.mysite.mysite.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "django.learning.demo_project1.mysite.mysite.settings",
        "description": "django.learning.demo_project1.mysite.mysite.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-y2yz-2+ty^4hlz1211)&c&ba)hv%k@1p_wzb$o9@e3k3eo+^ix'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "django.learning.demo_project1.mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "django.learning.demo_project1.mysite.mysite.settings",
        "description": "django.learning.demo_project1.mysite.mysite.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-y2yz-2+ty^4hlz1211)&c&ba)hv%k@1p_wzb$o9@e3k3eo+^ix'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "django.learning.demo_project1.mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "django.learning.demo_project1.mysite.mysite.settings",
        "description": "django.learning.demo_project1.mysite.mysite.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "django.learning.demo_project1.mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "django.learning.demo_project1.mysite.mysite.settings",
        "description": "django.learning.demo_project1.mysite.mysite.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "django.learning.demo_project1.mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "django.learning.demo_project1.mysite.mysite.settings",
        "description": "django.learning.demo_project1.mysite.mysite.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'ecm.apps.EcmConfig',\n    'rest_framework',",
        "detail": "django.learning.demo_project1.mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "django.learning.demo_project1.mysite.mysite.settings",
        "description": "django.learning.demo_project1.mysite.mysite.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'mysite.urls'",
        "detail": "django.learning.demo_project1.mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "django.learning.demo_project1.mysite.mysite.settings",
        "description": "django.learning.demo_project1.mysite.mysite.settings",
        "peekOfCode": "ROOT_URLCONF = 'mysite.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR,\"templates\"],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "django.learning.demo_project1.mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "django.learning.demo_project1.mysite.mysite.settings",
        "description": "django.learning.demo_project1.mysite.mysite.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR,\"templates\"],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "django.learning.demo_project1.mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "django.learning.demo_project1.mysite.mysite.settings",
        "description": "django.learning.demo_project1.mysite.mysite.settings",
        "peekOfCode": "WSGI_APPLICATION = 'mysite.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "django.learning.demo_project1.mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "django.learning.demo_project1.mysite.mysite.settings",
        "description": "django.learning.demo_project1.mysite.mysite.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "django.learning.demo_project1.mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "django.learning.demo_project1.mysite.mysite.settings",
        "description": "django.learning.demo_project1.mysite.mysite.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "django.learning.demo_project1.mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "django.learning.demo_project1.mysite.mysite.settings",
        "description": "django.learning.demo_project1.mysite.mysite.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "django.learning.demo_project1.mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "django.learning.demo_project1.mysite.mysite.settings",
        "description": "django.learning.demo_project1.mysite.mysite.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nJAZZMIN_SETTINGS = {",
        "detail": "django.learning.demo_project1.mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "django.learning.demo_project1.mysite.mysite.settings",
        "description": "django.learning.demo_project1.mysite.mysite.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nJAZZMIN_SETTINGS = {\n    \"theme\": \"default\",  # Change 'default' to the theme you want to apply dark_mode",
        "detail": "django.learning.demo_project1.mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "django.learning.demo_project1.mysite.mysite.settings",
        "description": "django.learning.demo_project1.mysite.mysite.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nJAZZMIN_SETTINGS = {\n    \"theme\": \"default\",  # Change 'default' to the theme you want to apply dark_mode\n}",
        "detail": "django.learning.demo_project1.mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "django.learning.demo_project1.mysite.mysite.settings",
        "description": "django.learning.demo_project1.mysite.mysite.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nJAZZMIN_SETTINGS = {\n    \"theme\": \"default\",  # Change 'default' to the theme you want to apply dark_mode\n}",
        "detail": "django.learning.demo_project1.mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "django.learning.demo_project1.mysite.mysite.settings",
        "description": "django.learning.demo_project1.mysite.mysite.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nJAZZMIN_SETTINGS = {\n    \"theme\": \"default\",  # Change 'default' to the theme you want to apply dark_mode\n}",
        "detail": "django.learning.demo_project1.mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "JAZZMIN_SETTINGS",
        "kind": 5,
        "importPath": "django.learning.demo_project1.mysite.mysite.settings",
        "description": "django.learning.demo_project1.mysite.mysite.settings",
        "peekOfCode": "JAZZMIN_SETTINGS = {\n    \"theme\": \"default\",  # Change 'default' to the theme you want to apply dark_mode\n}",
        "detail": "django.learning.demo_project1.mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "django.learning.demo_project1.mysite.mysite.urls",
        "description": "django.learning.demo_project1.mysite.mysite.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('',include('ecm.urls')),\n]",
        "detail": "django.learning.demo_project1.mysite.mysite.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "django.learning.demo_project1.mysite.mysite.wsgi",
        "description": "django.learning.demo_project1.mysite.mysite.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "django.learning.demo_project1.mysite.mysite.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "django.learning.demo_project1.mysite.manage",
        "description": "django.learning.demo_project1.mysite.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mysite.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "django.learning.demo_project1.mysite.manage",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "django.learning.e_commerce.crud.migrations.0001_initial",
        "description": "django.learning.e_commerce.crud.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='contact',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=120)),",
        "detail": "django.learning.e_commerce.crud.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "CrudConfig",
        "kind": 6,
        "importPath": "django.learning.e_commerce.crud.apps",
        "description": "django.learning.e_commerce.crud.apps",
        "peekOfCode": "class CrudConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'crud'",
        "detail": "django.learning.e_commerce.crud.apps",
        "documentation": {}
    },
    {
        "label": "stockForm",
        "kind": 6,
        "importPath": "django.learning.e_commerce.crud.forms",
        "description": "django.learning.e_commerce.crud.forms",
        "peekOfCode": "class stockForm(forms.Form):\n    product_name=forms.CharField(max_length=120)\n    product_id=forms.CharField(max_length=120)\n    product_price=forms.CharField(max_length=120)\nclass productForm(forms.Form):\n    product_name=forms.CharField(max_length=120)\n    product_id=forms.CharField(max_length=120)\n    product_dict=forms.CharField(max_length=120)\n    product_price=forms.CharField(max_length=120)",
        "detail": "django.learning.e_commerce.crud.forms",
        "documentation": {}
    },
    {
        "label": "productForm",
        "kind": 6,
        "importPath": "django.learning.e_commerce.crud.forms",
        "description": "django.learning.e_commerce.crud.forms",
        "peekOfCode": "class productForm(forms.Form):\n    product_name=forms.CharField(max_length=120)\n    product_id=forms.CharField(max_length=120)\n    product_dict=forms.CharField(max_length=120)\n    product_price=forms.CharField(max_length=120)",
        "detail": "django.learning.e_commerce.crud.forms",
        "documentation": {}
    },
    {
        "label": "signup",
        "kind": 6,
        "importPath": "django.learning.e_commerce.crud.models",
        "description": "django.learning.e_commerce.crud.models",
        "peekOfCode": "class signup(models.Model):\n    name=models.CharField(max_length=120)\n    contact=models.CharField(max_length=12)\n    address=models.CharField(max_length=120)\n    email=models.EmailField()\n    city=models.CharField(max_length=10)\n    state=models.CharField(max_length=10)\n    zip=models.CharField(max_length=10)\n    tandc=models.CharField(max_length=10)\n    date=models.DateField()",
        "detail": "django.learning.e_commerce.crud.models",
        "documentation": {}
    },
    {
        "label": "contact",
        "kind": 6,
        "importPath": "django.learning.e_commerce.crud.models",
        "description": "django.learning.e_commerce.crud.models",
        "peekOfCode": "class contact(models.Model):\n    name=models.CharField(max_length=120)\n    contact=models.CharField(max_length=12)\n    address=models.CharField(max_length=120)\n    email=models.EmailField()\n    tandc=models.CharField(max_length=10)\n    date=models.DateField()\nclass product(models.Model):\n    product_name=models.CharField(max_length=120)\n    product_id=models.CharField(max_length=120)",
        "detail": "django.learning.e_commerce.crud.models",
        "documentation": {}
    },
    {
        "label": "product",
        "kind": 6,
        "importPath": "django.learning.e_commerce.crud.models",
        "description": "django.learning.e_commerce.crud.models",
        "peekOfCode": "class product(models.Model):\n    product_name=models.CharField(max_length=120)\n    product_id=models.CharField(max_length=120)\n    product_dict=models.CharField(max_length=120)\n    product_price=models.CharField(max_length=120)\nclass stock(models.Model):\n    product_name=models.CharField(max_length=120)\n    product_id=models.CharField(max_length=120)\n    product_price=models.CharField(max_length=120)",
        "detail": "django.learning.e_commerce.crud.models",
        "documentation": {}
    },
    {
        "label": "stock",
        "kind": 6,
        "importPath": "django.learning.e_commerce.crud.models",
        "description": "django.learning.e_commerce.crud.models",
        "peekOfCode": "class stock(models.Model):\n    product_name=models.CharField(max_length=120)\n    product_id=models.CharField(max_length=120)\n    product_price=models.CharField(max_length=120)",
        "detail": "django.learning.e_commerce.crud.models",
        "documentation": {}
    },
    {
        "label": "ProductSerializer",
        "kind": 6,
        "importPath": "django.learning.e_commerce.crud.serializer",
        "description": "django.learning.e_commerce.crud.serializer",
        "peekOfCode": "class ProductSerializer(serializers.Serializer):\n    product_name=serializers.CharField(max_length=120)\n    product_id=serializers.CharField(max_length=120)\n    product_dict=serializers.CharField(max_length=120)\n    product_price=serializers.CharField(max_length=120)",
        "detail": "django.learning.e_commerce.crud.serializer",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "django.learning.e_commerce.crud.urls",
        "description": "django.learning.e_commerce.crud.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.index, name=\"home\"),\n    path('signin/', views.signin, name=\"signin\"),\n    path('signup/', views.signup, name=\"signup\"),\n    path('logout/', views.logoutuser, name=\"logout\"),\n    path('about-us/', views.aboutus,name=\"about\"),\n    path('contact/', views.contact),\n    path('product/', views.product,name=\"product\"),\n    path('product/<int:productid>', views.productdetail),\n    path('stock/', views.stock, name=\"stock\"),",
        "detail": "django.learning.e_commerce.crud.urls",
        "documentation": {}
    },
    {
        "label": "signup",
        "kind": 2,
        "importPath": "django.learning.e_commerce.crud.views",
        "description": "django.learning.e_commerce.crud.views",
        "peekOfCode": "def signup(request):\n    if request.method == 'POST':\n        name = request.POST.get('name')\n        contact = request.POST.get('contact')\n        address = request.POST.get('address')\n        email = request.POST.get('email')\n        city = request.POST.get('city')\n        state = request.POST.get('state')\n        zip_code = request.POST.get('zip')  \n        tandc = request.POST.get('tandc')",
        "detail": "django.learning.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "contact",
        "kind": 2,
        "importPath": "django.learning.e_commerce.crud.views",
        "description": "django.learning.e_commerce.crud.views",
        "peekOfCode": "def contact(request):\n    if request.method == 'POST':\n        name = request.POST.get('name')\n        contact = request.POST.get('contact')\n        address = request.POST.get('address')\n        email = request.POST.get('email')\n        tandc = request.POST.get('cmo')\n        # Use SignupModel instead of signup for the model class\n        contact_entry = ContactModel(name=name, contact=contact, address=address, email=email,tandc=tandc,date=datetime.now())\n        contact_entry.save()",
        "detail": "django.learning.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "signin",
        "kind": 2,
        "importPath": "django.learning.e_commerce.crud.views",
        "description": "django.learning.e_commerce.crud.views",
        "peekOfCode": "def signin(request):\n    if request.method == \"POST\":\n        email = request.POST.get('email')\n        password = request.POST.get('password')\n        user = authenticate(email=email, password=password)\n        if user is not None:\n            return redirect(\"/about-us\")\n        else:\n            return render(request, 'signin.html')\n    return render(request, 'signin.html')",
        "detail": "django.learning.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "aboutus",
        "kind": 2,
        "importPath": "django.learning.e_commerce.crud.views",
        "description": "django.learning.e_commerce.crud.views",
        "peekOfCode": "def aboutus(request):\n    dict = {\n        \"name\": \"Malay Thakkar\",\n        \"mailid\": \"its.malaythakkar@gmail.com\"\n    }\n    return render(request, \"about.html\", dict)\ndef index(request):\n    return render(request,\"index.html\")\ndef logoutuser(request):\n    logout(request)",
        "detail": "django.learning.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "django.learning.e_commerce.crud.views",
        "description": "django.learning.e_commerce.crud.views",
        "peekOfCode": "def index(request):\n    return render(request,\"index.html\")\ndef logoutuser(request):\n    logout(request)\n    return redirect(\"/signin\")\ndef product(request):\n    product = productModel.objects.all()\n    serializer = ProductSerializer(product, many=True)\n    context_data = {\n        'products': serializer.data",
        "detail": "django.learning.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "logoutuser",
        "kind": 2,
        "importPath": "django.learning.e_commerce.crud.views",
        "description": "django.learning.e_commerce.crud.views",
        "peekOfCode": "def logoutuser(request):\n    logout(request)\n    return redirect(\"/signin\")\ndef product(request):\n    product = productModel.objects.all()\n    serializer = ProductSerializer(product, many=True)\n    context_data = {\n        'products': serializer.data\n    }\n    return render(request,'product.html',context_data)",
        "detail": "django.learning.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "product",
        "kind": 2,
        "importPath": "django.learning.e_commerce.crud.views",
        "description": "django.learning.e_commerce.crud.views",
        "peekOfCode": "def product(request):\n    product = productModel.objects.all()\n    serializer = ProductSerializer(product, many=True)\n    context_data = {\n        'products': serializer.data\n    }\n    return render(request,'product.html',context_data)\ndef crudproduct(request):\n    form = productForm()\n    context = {'form': form}  # Initialize context",
        "detail": "django.learning.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "crudproduct",
        "kind": 2,
        "importPath": "django.learning.e_commerce.crud.views",
        "description": "django.learning.e_commerce.crud.views",
        "peekOfCode": "def crudproduct(request):\n    form = productForm()\n    context = {'form': form}  # Initialize context\n    if request.method == \"POST\":\n        form = productForm(request.POST)\n        if form.is_valid():\n            form.save()\n            stu = product.objects.all()\n            serializer = ProductSerializer(stu, many=True)\n            context['data'] = serializer.data  # Add data to context",
        "detail": "django.learning.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "productdetail",
        "kind": 2,
        "importPath": "django.learning.e_commerce.crud.views",
        "description": "django.learning.e_commerce.crud.views",
        "peekOfCode": "def productdetail(request,productid):\n    product = productModel.objects.get(product_id = productid)\n    serializer = ProductSerializer(product) \n    json_data = JSONRenderer().render(serializer.data)\n    return HttpResponse(json_data,content_type='application/json')\n# def product(request):\n#     if request.method ==\"POST\":\n#         product_name = request.POST.get(product_name)\n#         product_price = request.POST.get(product_price)\n#         product_dict = request.POST.get(product_dict)",
        "detail": "django.learning.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "stock",
        "kind": 2,
        "importPath": "django.learning.e_commerce.crud.views",
        "description": "django.learning.e_commerce.crud.views",
        "peekOfCode": "def stock(request):\n    if request.method=='POST':\n        form = stockForm(request.POST)\n        if form.is_valid():\n            product_name = form.cleaned_data['product_name']\n            product_id = form.cleaned_data['product_id']\n            product_price = form.cleaned_data['product_price']\n            new_stock = stockModel(product_name=product_name, product_id=product_id, product_price=product_price)\n            new_stock.save()\n            return HttpResponse('success')",
        "detail": "django.learning.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "django.learning.e_commerce.e_commerce.crud.migrations.0001_initial",
        "description": "django.learning.e_commerce.e_commerce.crud.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='contact',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=120)),",
        "detail": "django.learning.e_commerce.e_commerce.crud.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "django.learning.e_commerce.e_commerce.crud.migrations.0002_task",
        "description": "django.learning.e_commerce.e_commerce.crud.migrations.0002_task",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('crud', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Task',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.CharField(max_length=200)),",
        "detail": "django.learning.e_commerce.e_commerce.crud.migrations.0002_task",
        "documentation": {}
    },
    {
        "label": "CrudConfig",
        "kind": 6,
        "importPath": "django.learning.e_commerce.e_commerce.crud.apps",
        "description": "django.learning.e_commerce.e_commerce.crud.apps",
        "peekOfCode": "class CrudConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'crud'",
        "detail": "django.learning.e_commerce.e_commerce.crud.apps",
        "documentation": {}
    },
    {
        "label": "stockForm",
        "kind": 6,
        "importPath": "django.learning.e_commerce.e_commerce.crud.forms",
        "description": "django.learning.e_commerce.e_commerce.crud.forms",
        "peekOfCode": "class stockForm(forms.Form):\n    product_name=forms.CharField(max_length=120)\n    product_id=forms.CharField(max_length=120)\n    product_price=forms.CharField(max_length=120)\nclass ProductForm(forms.ModelForm):\n    class Meta:\n        model = product\n        fields = '__all__'",
        "detail": "django.learning.e_commerce.e_commerce.crud.forms",
        "documentation": {}
    },
    {
        "label": "ProductForm",
        "kind": 6,
        "importPath": "django.learning.e_commerce.e_commerce.crud.forms",
        "description": "django.learning.e_commerce.e_commerce.crud.forms",
        "peekOfCode": "class ProductForm(forms.ModelForm):\n    class Meta:\n        model = product\n        fields = '__all__'",
        "detail": "django.learning.e_commerce.e_commerce.crud.forms",
        "documentation": {}
    },
    {
        "label": "signup",
        "kind": 6,
        "importPath": "django.learning.e_commerce.e_commerce.crud.models",
        "description": "django.learning.e_commerce.e_commerce.crud.models",
        "peekOfCode": "class signup(models.Model):\n    name=models.CharField(max_length=120)\n    contact=models.CharField(max_length=12)\n    address=models.CharField(max_length=120)\n    email=models.EmailField()\n    city=models.CharField(max_length=10)\n    state=models.CharField(max_length=10)\n    zip=models.CharField(max_length=10)\n    tandc=models.CharField(max_length=10)\n    date=models.DateField()",
        "detail": "django.learning.e_commerce.e_commerce.crud.models",
        "documentation": {}
    },
    {
        "label": "contact",
        "kind": 6,
        "importPath": "django.learning.e_commerce.e_commerce.crud.models",
        "description": "django.learning.e_commerce.e_commerce.crud.models",
        "peekOfCode": "class contact(models.Model):\n    name=models.CharField(max_length=120)\n    contact=models.CharField(max_length=12)\n    address=models.CharField(max_length=120)\n    email=models.EmailField()\n    tandc=models.CharField(max_length=10)\n    date=models.DateField()\nclass product(models.Model):\n    product_name=models.CharField(max_length=120)\n    product_id=models.CharField(max_length=120)",
        "detail": "django.learning.e_commerce.e_commerce.crud.models",
        "documentation": {}
    },
    {
        "label": "product",
        "kind": 6,
        "importPath": "django.learning.e_commerce.e_commerce.crud.models",
        "description": "django.learning.e_commerce.e_commerce.crud.models",
        "peekOfCode": "class product(models.Model):\n    product_name=models.CharField(max_length=120)\n    product_id=models.CharField(max_length=120)\n    product_dict=models.CharField(max_length=120)\n    product_price=models.CharField(max_length=120)\nclass stock(models.Model):\n    product_name=models.CharField(max_length=120)\n    product_id=models.CharField(max_length=120)\n    product_price=models.CharField(max_length=120)\nclass Task(models.Model):",
        "detail": "django.learning.e_commerce.e_commerce.crud.models",
        "documentation": {}
    },
    {
        "label": "stock",
        "kind": 6,
        "importPath": "django.learning.e_commerce.e_commerce.crud.models",
        "description": "django.learning.e_commerce.e_commerce.crud.models",
        "peekOfCode": "class stock(models.Model):\n    product_name=models.CharField(max_length=120)\n    product_id=models.CharField(max_length=120)\n    product_price=models.CharField(max_length=120)\nclass Task(models.Model):\n  title = models.CharField(max_length=200)\n  completed = models.BooleanField(default=False, blank=True, null=True)\n  def __str__(self):\n    return self.title",
        "detail": "django.learning.e_commerce.e_commerce.crud.models",
        "documentation": {}
    },
    {
        "label": "Task",
        "kind": 6,
        "importPath": "django.learning.e_commerce.e_commerce.crud.models",
        "description": "django.learning.e_commerce.e_commerce.crud.models",
        "peekOfCode": "class Task(models.Model):\n  title = models.CharField(max_length=200)\n  completed = models.BooleanField(default=False, blank=True, null=True)\n  def __str__(self):\n    return self.title",
        "detail": "django.learning.e_commerce.e_commerce.crud.models",
        "documentation": {}
    },
    {
        "label": "ProductSerializer",
        "kind": 6,
        "importPath": "django.learning.e_commerce.e_commerce.crud.serializer",
        "description": "django.learning.e_commerce.e_commerce.crud.serializer",
        "peekOfCode": "class ProductSerializer(serializers.Serializer):\n    product_name=serializers.CharField(max_length=120)\n    product_id=serializers.CharField(max_length=120)\n    product_dict=serializers.CharField(max_length=120)\n    product_price=serializers.CharField(max_length=120)\nclass TaskSerializer(serializers.ModelSerializer):\n\tclass Meta:\n\t\tmodel = Task\n\t\tfields ='__all__'",
        "detail": "django.learning.e_commerce.e_commerce.crud.serializer",
        "documentation": {}
    },
    {
        "label": "TaskSerializer",
        "kind": 6,
        "importPath": "django.learning.e_commerce.e_commerce.crud.serializer",
        "description": "django.learning.e_commerce.e_commerce.crud.serializer",
        "peekOfCode": "class TaskSerializer(serializers.ModelSerializer):\n\tclass Meta:\n\t\tmodel = Task\n\t\tfields ='__all__'",
        "detail": "django.learning.e_commerce.e_commerce.crud.serializer",
        "documentation": {}
    },
    {
        "label": "\t\tmodel",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.crud.serializer",
        "description": "django.learning.e_commerce.e_commerce.crud.serializer",
        "peekOfCode": "\t\tmodel = Task\n\t\tfields ='__all__'",
        "detail": "django.learning.e_commerce.e_commerce.crud.serializer",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.crud.urls",
        "description": "django.learning.e_commerce.e_commerce.crud.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.index, name=\"home\"),\n    path('signin/', views.signin, name=\"signin\"),\n    path('signup/', views.signup, name=\"signup\"),\n    path('logout/', views.logoutuser, name=\"logout\"),\n    path('about-us/', views.aboutus,name=\"about\"),\n    path('contact/', views.contact),\n    path('product/', views.product,name=\"product\"),\n    path('product/<int:productid>', views.productdetail),\n    path('stock/', views.stock, name=\"stock\"),",
        "detail": "django.learning.e_commerce.e_commerce.crud.urls",
        "documentation": {}
    },
    {
        "label": "signup",
        "kind": 2,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "def signup(request):\n    if request.method == 'POST':\n        name = request.POST.get('name')\n        contact = request.POST.get('contact')\n        address = request.POST.get('address')\n        email = request.POST.get('email')\n        city = request.POST.get('city')\n        state = request.POST.get('state')\n        zip_code = request.POST.get('zip')  \n        tandc = request.POST.get('tandc')",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "contact",
        "kind": 2,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "def contact(request):\n    if request.method == 'POST':\n        name = request.POST.get('name')\n        contact = request.POST.get('contact')\n        address = request.POST.get('address')\n        email = request.POST.get('email')\n        tandc = request.POST.get('cmo')\n        # Use SignupModel instead of signup for the model class\n        contact_entry = ContactModel(name=name, contact=contact, address=address, email=email,tandc=tandc,date=datetime.now())\n        contact_entry.save()",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "signin",
        "kind": 2,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "def signin(request):\n    if request.method == \"POST\":\n        email = request.POST.get('email')\n        password = request.POST.get('password')\n        user = authenticate(email=email, password=password)\n        if user is not None:\n            return redirect(\"/about-us\")\n        else:\n            return render(request, 'signin.html')\n    return render(request, 'signin.html')",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "aboutus",
        "kind": 2,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "def aboutus(request):\n    dict = {\n        \"name\": \"Malay Thakkar\",\n        \"mailid\": \"its.malaythakkar@gmail.com\"\n    }\n    return render(request, \"about.html\", dict)\ndef index(request):\n    return render(request,\"index.html\")\ndef logoutuser(request):\n    logout(request)",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "def index(request):\n    return render(request,\"index.html\")\ndef logoutuser(request):\n    logout(request)\n    return redirect(\"/signin\")\ndef product(request):\n    product = productModel.objects.all()\n    serializer = ProductSerializer(product, many=True)\n    context_data = {\n        'products': serializer.data",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "logoutuser",
        "kind": 2,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "def logoutuser(request):\n    logout(request)\n    return redirect(\"/signin\")\ndef product(request):\n    product = productModel.objects.all()\n    serializer = ProductSerializer(product, many=True)\n    context_data = {\n        'products': serializer.data\n    }\n    return render(request,'product.html',context_data)",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "product",
        "kind": 2,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "def product(request):\n    product = productModel.objects.all()\n    serializer = ProductSerializer(product, many=True)\n    context_data = {\n        'products': serializer.data\n    }\n    return render(request,'product.html',context_data)\ndef crudproduct(request):\n    print(\"called\")\n    if request.method == \"POST\":",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "crudproduct",
        "kind": 2,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "def crudproduct(request):\n    print(\"called\")\n    if request.method == \"POST\":\n        print(\"called\")\n        fm = ProductForm(request.POST)\n        if fm.is_valid():\n            print(\"called\")\n            fm.save()\n            fm = ProductForm()\n    else:",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "delete_single_product",
        "kind": 2,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "def delete_single_product(request):\n    if request.method == 'POST':\n        product_id = request.POST.get('product_id')\n        print(product_id)\n        try:\n            product = productModel.objects.get(product_id=product_id)\n        except productModel.DoesNotExist:\n            return HttpResponse(\"Product not found\", status=404)\n        product.delete()\n        return redirect('/crudproduct')",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "del_product",
        "kind": 2,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "def del_product(request, productid):\n    if request.method == 'POST':\n        try:\n            # Filter all products with the specified product_id and delete them\n            products_to_delete = productModel.objects.filter(product_id=productid)\n            print(\"Deleting products:\", products_to_delete)\n            products_to_delete.delete()\n            print(\"Products deleted successfully.\")\n            return redirect('/crudproduct')\n        except Exception as e:",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "productdetail",
        "kind": 2,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "def productdetail(request,productid):\n    product = productModel.objects.get(product_id = productid)\n    serializer = ProductSerializer(product) \n    json_data = JSONRenderer().render(serializer.data)\n    return HttpResponse(json_data,content_type='application/json')\n@api_view(['GET'])\ndef apiOverview(request):\n\tapi_urls = {\n\t\t'List':'/task-list/',\n\t\t'Detail View':'/task-detail/<str:pk>/',",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "apiOverview",
        "kind": 2,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "def apiOverview(request):\n\tapi_urls = {\n\t\t'List':'/task-list/',\n\t\t'Detail View':'/task-detail/<str:pk>/',\n\t\t'Create':'/task-create/',\n\t\t'Update':'/task-update/<str:pk>/',\n\t\t'Delete':'/task-delete/<str:pk>/',\n\t\t}\n\treturn Response(api_urls)\n@api_view(['GET'])",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "taskList",
        "kind": 2,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "def taskList(request):\n\ttasks = Task.objects.all().order_by('-id')\n\tserializer = TaskSerializer(tasks, many=True)\n\treturn Response(serializer.data)\n@api_view(['GET'])\ndef taskDetail(request, pk):\n\ttasks = Task.objects.get(id=pk)\n\tserializer = TaskSerializer(tasks, many=False)\n\treturn Response(serializer.data)\n@api_view(['POST'])",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "taskDetail",
        "kind": 2,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "def taskDetail(request, pk):\n\ttasks = Task.objects.get(id=pk)\n\tserializer = TaskSerializer(tasks, many=False)\n\treturn Response(serializer.data)\n@api_view(['POST'])\ndef taskCreate(request):\n\tserializer = TaskSerializer(data=request.data)\n\tif serializer.is_valid():\n\t\tserializer.save()\n\treturn Response(serializer.data)",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "taskCreate",
        "kind": 2,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "def taskCreate(request):\n\tserializer = TaskSerializer(data=request.data)\n\tif serializer.is_valid():\n\t\tserializer.save()\n\treturn Response(serializer.data)\n@api_view(['POST'])\ndef taskUpdate(request, pk):\n\ttask = Task.objects.get(id=pk)\n\tserializer = TaskSerializer(instance=task, data=request.data)\n\tif serializer.is_valid():",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "taskUpdate",
        "kind": 2,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "def taskUpdate(request, pk):\n\ttask = Task.objects.get(id=pk)\n\tserializer = TaskSerializer(instance=task, data=request.data)\n\tif serializer.is_valid():\n\t\tserializer.save()\n\treturn Response(serializer.data)\n@api_view(['DELETE'])\ndef taskDelete(request, pk):\n\ttask = Task.objects.get(id=pk)\n\ttask.delete()",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "taskDelete",
        "kind": 2,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "def taskDelete(request, pk):\n\ttask = Task.objects.get(id=pk)\n\ttask.delete()\n\treturn Response('Item succsesfully delete!')\n# def product(request):\n#     if request.method ==\"POST\":\n#         product_name = request.POST.get(product_name)\n#         product_price = request.POST.get(product_price)\n#         product_dict = request.POST.get(product_dict)\n#         product_img = request.POST.get(product_img)",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "stock",
        "kind": 2,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "def stock(request):\n    if request.method=='POST':\n        form = stockForm(request.POST)\n        if form.is_valid():\n            product_name = form.cleaned_data['product_name']\n            product_id = form.cleaned_data['product_id']\n            product_price = form.cleaned_data['product_price']\n            new_stock = stockModel(product_name=product_name, product_id=product_id, product_price=product_price)\n            new_stock.save()\n            return HttpResponse('success')",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "\tapi_urls",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "\tapi_urls = {\n\t\t'List':'/task-list/',\n\t\t'Detail View':'/task-detail/<str:pk>/',\n\t\t'Create':'/task-create/',\n\t\t'Update':'/task-update/<str:pk>/',\n\t\t'Delete':'/task-delete/<str:pk>/',\n\t\t}\n\treturn Response(api_urls)\n@api_view(['GET'])\ndef taskList(request):",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "\ttasks",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "\ttasks = Task.objects.all().order_by('-id')\n\tserializer = TaskSerializer(tasks, many=True)\n\treturn Response(serializer.data)\n@api_view(['GET'])\ndef taskDetail(request, pk):\n\ttasks = Task.objects.get(id=pk)\n\tserializer = TaskSerializer(tasks, many=False)\n\treturn Response(serializer.data)\n@api_view(['POST'])\ndef taskCreate(request):",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "\tserializer",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "\tserializer = TaskSerializer(tasks, many=True)\n\treturn Response(serializer.data)\n@api_view(['GET'])\ndef taskDetail(request, pk):\n\ttasks = Task.objects.get(id=pk)\n\tserializer = TaskSerializer(tasks, many=False)\n\treturn Response(serializer.data)\n@api_view(['POST'])\ndef taskCreate(request):\n\tserializer = TaskSerializer(data=request.data)",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "\ttasks",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "\ttasks = Task.objects.get(id=pk)\n\tserializer = TaskSerializer(tasks, many=False)\n\treturn Response(serializer.data)\n@api_view(['POST'])\ndef taskCreate(request):\n\tserializer = TaskSerializer(data=request.data)\n\tif serializer.is_valid():\n\t\tserializer.save()\n\treturn Response(serializer.data)\n@api_view(['POST'])",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "\tserializer",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "\tserializer = TaskSerializer(tasks, many=False)\n\treturn Response(serializer.data)\n@api_view(['POST'])\ndef taskCreate(request):\n\tserializer = TaskSerializer(data=request.data)\n\tif serializer.is_valid():\n\t\tserializer.save()\n\treturn Response(serializer.data)\n@api_view(['POST'])\ndef taskUpdate(request, pk):",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "\tserializer",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "\tserializer = TaskSerializer(data=request.data)\n\tif serializer.is_valid():\n\t\tserializer.save()\n\treturn Response(serializer.data)\n@api_view(['POST'])\ndef taskUpdate(request, pk):\n\ttask = Task.objects.get(id=pk)\n\tserializer = TaskSerializer(instance=task, data=request.data)\n\tif serializer.is_valid():\n\t\tserializer.save()",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "\ttask",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "\ttask = Task.objects.get(id=pk)\n\tserializer = TaskSerializer(instance=task, data=request.data)\n\tif serializer.is_valid():\n\t\tserializer.save()\n\treturn Response(serializer.data)\n@api_view(['DELETE'])\ndef taskDelete(request, pk):\n\ttask = Task.objects.get(id=pk)\n\ttask.delete()\n\treturn Response('Item succsesfully delete!')",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "\tserializer",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "\tserializer = TaskSerializer(instance=task, data=request.data)\n\tif serializer.is_valid():\n\t\tserializer.save()\n\treturn Response(serializer.data)\n@api_view(['DELETE'])\ndef taskDelete(request, pk):\n\ttask = Task.objects.get(id=pk)\n\ttask.delete()\n\treturn Response('Item succsesfully delete!')\n# def product(request):",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "\ttask",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.crud.views",
        "description": "django.learning.e_commerce.e_commerce.crud.views",
        "peekOfCode": "\ttask = Task.objects.get(id=pk)\n\ttask.delete()\n\treturn Response('Item succsesfully delete!')\n# def product(request):\n#     if request.method ==\"POST\":\n#         product_name = request.POST.get(product_name)\n#         product_price = request.POST.get(product_price)\n#         product_dict = request.POST.get(product_dict)\n#         product_img = request.POST.get(product_img)\n#         product_entry =productModel(product_name=product_name,product_price=product_price,product_img=product_img)",
        "detail": "django.learning.e_commerce.e_commerce.crud.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.e_commerce.asgi",
        "description": "django.learning.e_commerce.e_commerce.e_commerce.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "django.learning.e_commerce.e_commerce.e_commerce.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-*zx7)g)aj$(%z@55ozj#+4bsvo0px9dim!ue^h44ngo2vk-^cq'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-*zx7)g)aj$(%z@55ozj#+4bsvo0px9dim!ue^h44ngo2vk-^cq'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'crud'",
        "detail": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'e_commerce.urls'",
        "detail": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "peekOfCode": "ROOT_URLCONF = 'e_commerce.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR) , \"templates\"],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR) , \"templates\"],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "peekOfCode": "WSGI_APPLICATION = 'e_commerce.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nJAZZMIN_SETTINGS = {",
        "detail": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nJAZZMIN_SETTINGS = {\n    \"theme\": \"default\",  # Change 'default' to the theme you want to apply dark_mode",
        "detail": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nJAZZMIN_SETTINGS = {\n    \"theme\": \"default\",  # Change 'default' to the theme you want to apply dark_mode\n}",
        "detail": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nJAZZMIN_SETTINGS = {\n    \"theme\": \"default\",  # Change 'default' to the theme you want to apply dark_mode\n}",
        "detail": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nJAZZMIN_SETTINGS = {\n    \"theme\": \"default\",  # Change 'default' to the theme you want to apply dark_mode\n}",
        "detail": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "JAZZMIN_SETTINGS",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "peekOfCode": "JAZZMIN_SETTINGS = {\n    \"theme\": \"default\",  # Change 'default' to the theme you want to apply dark_mode\n}",
        "detail": "django.learning.e_commerce.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.e_commerce.urls",
        "description": "django.learning.e_commerce.e_commerce.e_commerce.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n        path('',include('crud.urls')),\n]",
        "detail": "django.learning.e_commerce.e_commerce.e_commerce.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.e_commerce.wsgi",
        "description": "django.learning.e_commerce.e_commerce.e_commerce.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "django.learning.e_commerce.e_commerce.e_commerce.wsgi",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.asgi",
        "description": "django.learning.e_commerce.e_commerce.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "django.learning.e_commerce.e_commerce.asgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "django.learning.e_commerce.e_commerce.manage",
        "description": "django.learning.e_commerce.e_commerce.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'e_commerce.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "django.learning.e_commerce.e_commerce.manage",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-*zx7)g)aj$(%z@55ozj#+4bsvo0px9dim!ue^h44ngo2vk-^cq'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "django.learning.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-*zx7)g)aj$(%z@55ozj#+4bsvo0px9dim!ue^h44ngo2vk-^cq'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "django.learning.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "django.learning.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "django.learning.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'crud'",
        "detail": "django.learning.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'e_commerce.urls'",
        "detail": "django.learning.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.settings",
        "peekOfCode": "ROOT_URLCONF = 'e_commerce.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR) , \"templates\"],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "django.learning.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR) , \"templates\"],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "django.learning.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.settings",
        "peekOfCode": "WSGI_APPLICATION = 'e_commerce.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "django.learning.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "django.learning.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "django.learning.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "django.learning.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nJAZZMIN_SETTINGS = {",
        "detail": "django.learning.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nJAZZMIN_SETTINGS = {\n    \"theme\": \"default\",  # Change 'default' to the theme you want to apply dark_mode",
        "detail": "django.learning.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nJAZZMIN_SETTINGS = {\n    \"theme\": \"default\",  # Change 'default' to the theme you want to apply dark_mode\n}",
        "detail": "django.learning.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nJAZZMIN_SETTINGS = {\n    \"theme\": \"default\",  # Change 'default' to the theme you want to apply dark_mode\n}",
        "detail": "django.learning.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nJAZZMIN_SETTINGS = {\n    \"theme\": \"default\",  # Change 'default' to the theme you want to apply dark_mode\n}",
        "detail": "django.learning.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "JAZZMIN_SETTINGS",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.settings",
        "description": "django.learning.e_commerce.e_commerce.settings",
        "peekOfCode": "JAZZMIN_SETTINGS = {\n    \"theme\": \"default\",  # Change 'default' to the theme you want to apply dark_mode\n}",
        "detail": "django.learning.e_commerce.e_commerce.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.urls",
        "description": "django.learning.e_commerce.e_commerce.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n        path('',include('crud.urls')),\n]",
        "detail": "django.learning.e_commerce.e_commerce.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "django.learning.e_commerce.e_commerce.wsgi",
        "description": "django.learning.e_commerce.e_commerce.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "django.learning.e_commerce.e_commerce.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "django.learning.e_commerce.manage",
        "description": "django.learning.e_commerce.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'e_commerce.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "django.learning.e_commerce.manage",
        "documentation": {}
    },
    {
        "label": "FileapiConfig",
        "kind": 6,
        "importPath": "django.learning.File_manager.file_manager.fileapi.apps",
        "description": "django.learning.File_manager.file_manager.fileapi.apps",
        "peekOfCode": "class FileapiConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'fileapi'",
        "detail": "django.learning.File_manager.file_manager.fileapi.apps",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "django.learning.File_manager.file_manager.file_manager.asgi",
        "description": "django.learning.File_manager.file_manager.file_manager.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "django.learning.File_manager.file_manager.file_manager.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "django.learning.File_manager.file_manager.file_manager.settings",
        "description": "django.learning.File_manager.file_manager.file_manager.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-%)zd@j&j16b82j4^&&ib3s$+$7w#d=drg6w*-r*%6)@+wmz(hv'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "django.learning.File_manager.file_manager.file_manager.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "django.learning.File_manager.file_manager.file_manager.settings",
        "description": "django.learning.File_manager.file_manager.file_manager.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-%)zd@j&j16b82j4^&&ib3s$+$7w#d=drg6w*-r*%6)@+wmz(hv'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "django.learning.File_manager.file_manager.file_manager.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "django.learning.File_manager.file_manager.file_manager.settings",
        "description": "django.learning.File_manager.file_manager.file_manager.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "django.learning.File_manager.file_manager.file_manager.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "django.learning.File_manager.file_manager.file_manager.settings",
        "description": "django.learning.File_manager.file_manager.file_manager.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n]",
        "detail": "django.learning.File_manager.file_manager.file_manager.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "django.learning.File_manager.file_manager.file_manager.settings",
        "description": "django.learning.File_manager.file_manager.file_manager.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n]\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',",
        "detail": "django.learning.File_manager.file_manager.file_manager.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "django.learning.File_manager.file_manager.file_manager.settings",
        "description": "django.learning.File_manager.file_manager.file_manager.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'file_manager.urls'",
        "detail": "django.learning.File_manager.file_manager.file_manager.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "django.learning.File_manager.file_manager.file_manager.settings",
        "description": "django.learning.File_manager.file_manager.file_manager.settings",
        "peekOfCode": "ROOT_URLCONF = 'file_manager.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "django.learning.File_manager.file_manager.file_manager.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "django.learning.File_manager.file_manager.file_manager.settings",
        "description": "django.learning.File_manager.file_manager.file_manager.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "django.learning.File_manager.file_manager.file_manager.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "django.learning.File_manager.file_manager.file_manager.settings",
        "description": "django.learning.File_manager.file_manager.file_manager.settings",
        "peekOfCode": "WSGI_APPLICATION = 'file_manager.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'mydatabase',\n        'USER': 'mydatabaseuser',\n        'PASSWORD': 'mypassword',\n        'HOST': 'localhost',",
        "detail": "django.learning.File_manager.file_manager.file_manager.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "django.learning.File_manager.file_manager.file_manager.settings",
        "description": "django.learning.File_manager.file_manager.file_manager.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'mydatabase',\n        'USER': 'mydatabaseuser',\n        'PASSWORD': 'mypassword',\n        'HOST': 'localhost',\n        'PORT': '5432',\n    }\n}",
        "detail": "django.learning.File_manager.file_manager.file_manager.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "django.learning.File_manager.file_manager.file_manager.settings",
        "description": "django.learning.File_manager.file_manager.file_manager.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "django.learning.File_manager.file_manager.file_manager.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "django.learning.File_manager.file_manager.file_manager.settings",
        "description": "django.learning.File_manager.file_manager.file_manager.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "django.learning.File_manager.file_manager.file_manager.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "django.learning.File_manager.file_manager.file_manager.settings",
        "description": "django.learning.File_manager.file_manager.file_manager.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "django.learning.File_manager.file_manager.file_manager.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "django.learning.File_manager.file_manager.file_manager.settings",
        "description": "django.learning.File_manager.file_manager.file_manager.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "django.learning.File_manager.file_manager.file_manager.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "django.learning.File_manager.file_manager.file_manager.settings",
        "description": "django.learning.File_manager.file_manager.file_manager.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "django.learning.File_manager.file_manager.file_manager.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "django.learning.File_manager.file_manager.file_manager.settings",
        "description": "django.learning.File_manager.file_manager.file_manager.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "django.learning.File_manager.file_manager.file_manager.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "django.learning.File_manager.file_manager.file_manager.settings",
        "description": "django.learning.File_manager.file_manager.file_manager.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "django.learning.File_manager.file_manager.file_manager.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "django.learning.File_manager.file_manager.file_manager.urls",
        "description": "django.learning.File_manager.file_manager.file_manager.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n]",
        "detail": "django.learning.File_manager.file_manager.file_manager.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "django.learning.File_manager.file_manager.file_manager.wsgi",
        "description": "django.learning.File_manager.file_manager.file_manager.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "django.learning.File_manager.file_manager.file_manager.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "django.learning.File_manager.file_manager.manage",
        "description": "django.learning.File_manager.file_manager.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'file_manager.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "django.learning.File_manager.file_manager.manage",
        "documentation": {}
    },
    {
        "label": "my_string",
        "kind": 5,
        "importPath": "LIST_Comprehension.practice",
        "description": "LIST_Comprehension.practice",
        "peekOfCode": "my_string = \"ThisIsCamelCaseExample\"\nprint(id(my_string) ,  my_string)\nmy_string = \"\".join([i if i.islower() else \" \" + i for i in my_string])\n# for i in my_string:\n#     if i.islower():\n#         my_string+=i\n#     else:\n#         my_string+=\" \"\nprint(id(my_string) , my_string)\n#new_srtring = \"\".join([i if i.islower() else \" \" + \"@\" if i == \"C\" else \" \" + i for i in my_string])[1:]",
        "detail": "LIST_Comprehension.practice",
        "documentation": {}
    },
    {
        "label": "my_string",
        "kind": 5,
        "importPath": "LIST_Comprehension.practice",
        "description": "LIST_Comprehension.practice",
        "peekOfCode": "my_string = \"\".join([i if i.islower() else \" \" + i for i in my_string])\n# for i in my_string:\n#     if i.islower():\n#         my_string+=i\n#     else:\n#         my_string+=\" \"\nprint(id(my_string) , my_string)\n#new_srtring = \"\".join([i if i.islower() else \" \" + \"@\" if i == \"C\" else \" \" + i for i in my_string])[1:]\n#print(new_srtring)",
        "detail": "LIST_Comprehension.practice",
        "documentation": {}
    },
    {
        "label": "#new_srtring",
        "kind": 5,
        "importPath": "LIST_Comprehension.practice",
        "description": "LIST_Comprehension.practice",
        "peekOfCode": "#new_srtring = \"\".join([i if i.islower() else \" \" + \"@\" if i == \"C\" else \" \" + i for i in my_string])[1:]\n#print(new_srtring)",
        "detail": "LIST_Comprehension.practice",
        "documentation": {}
    },
    {
        "label": "MediaItem",
        "kind": 6,
        "importPath": "OOP.basic_oop",
        "description": "OOP.basic_oop",
        "peekOfCode": "class MediaItem:\n    def __init__(self, title, file_path):\n        self.__title = title  # Private attribute\n        self.__file_path = file_path  \n    def play(self):  #abstraction\n        pass\n    def get_title(self):\n        return self.__title\n    def set_title(self, title):\n        self.__title = title",
        "detail": "OOP.basic_oop",
        "documentation": {}
    },
    {
        "label": "Image",
        "kind": 6,
        "importPath": "OOP.basic_oop",
        "description": "OOP.basic_oop",
        "peekOfCode": "class Image(MediaItem):\n    def __init__(self, title, file_path, resolution):\n        super().__init__(title, file_path)\n        self.__resolution = resolution\n    def play(self):\n        print(f\"Displaying image: {self.get_title()}\")\n    def get_resolution(self):\n        return self.__resolution\n    def set_resolution(self, resolution):\n        self.__resolution = resolution",
        "detail": "OOP.basic_oop",
        "documentation": {}
    },
    {
        "label": "Video",
        "kind": 6,
        "importPath": "OOP.basic_oop",
        "description": "OOP.basic_oop",
        "peekOfCode": "class Video(MediaItem):\n    def __init__(self, title, file_path, duration):\n        super().__init__(title, file_path)\n        self.__duration = duration\n    def play(self):\n        print(f\"Playing video: {self.get_title()}\")\n    def get_duration(self):\n        return self.__duration\n    def set_duration(self, duration):\n        self.__duration = duration",
        "detail": "OOP.basic_oop",
        "documentation": {}
    },
    {
        "label": "Audio",
        "kind": 6,
        "importPath": "OOP.basic_oop",
        "description": "OOP.basic_oop",
        "peekOfCode": "class Audio(MediaItem):\n    def __init__(self, title, file_path, duration):\n        super().__init__(title, file_path)\n        self.__duration = duration\n    def play(self):\n        print(f\"Playing audio: {self.get_title()}\")\n    def get_duration(self):\n        return self.__duration\n    def set_duration(self, duration):\n        self.__duration = duration",
        "detail": "OOP.basic_oop",
        "documentation": {}
    },
    {
        "label": "image",
        "kind": 5,
        "importPath": "OOP.basic_oop",
        "description": "OOP.basic_oop",
        "peekOfCode": "image = Image(\"Nature\", \"nature.jpg\", \"1920x1080\")\nvideo = Video(\"Demo\", \"demo.mp4\", \"5:30\")\naudio = Audio(\"Song\", \"song.mp3\", \"4:20\")\nmedia_items = [image, video, audio]\nfor item in media_items:\n    item.play()\nprint(audio.get_audio_info()) \n# Accessing static method\nprint(MediaItem.file_exists(\"example.txt\"))\n# Accessing class method",
        "detail": "OOP.basic_oop",
        "documentation": {}
    },
    {
        "label": "video",
        "kind": 5,
        "importPath": "OOP.basic_oop",
        "description": "OOP.basic_oop",
        "peekOfCode": "video = Video(\"Demo\", \"demo.mp4\", \"5:30\")\naudio = Audio(\"Song\", \"song.mp3\", \"4:20\")\nmedia_items = [image, video, audio]\nfor item in media_items:\n    item.play()\nprint(audio.get_audio_info()) \n# Accessing static method\nprint(MediaItem.file_exists(\"example.txt\"))\n# Accessing class method\nfile_media_item = MediaItem.from_file(\"example.txt\")",
        "detail": "OOP.basic_oop",
        "documentation": {}
    },
    {
        "label": "audio",
        "kind": 5,
        "importPath": "OOP.basic_oop",
        "description": "OOP.basic_oop",
        "peekOfCode": "audio = Audio(\"Song\", \"song.mp3\", \"4:20\")\nmedia_items = [image, video, audio]\nfor item in media_items:\n    item.play()\nprint(audio.get_audio_info()) \n# Accessing static method\nprint(MediaItem.file_exists(\"example.txt\"))\n# Accessing class method\nfile_media_item = MediaItem.from_file(\"example.txt\")\nprint(file_media_item.get_title())  # Output: example",
        "detail": "OOP.basic_oop",
        "documentation": {}
    },
    {
        "label": "media_items",
        "kind": 5,
        "importPath": "OOP.basic_oop",
        "description": "OOP.basic_oop",
        "peekOfCode": "media_items = [image, video, audio]\nfor item in media_items:\n    item.play()\nprint(audio.get_audio_info()) \n# Accessing static method\nprint(MediaItem.file_exists(\"example.txt\"))\n# Accessing class method\nfile_media_item = MediaItem.from_file(\"example.txt\")\nprint(file_media_item.get_title())  # Output: example",
        "detail": "OOP.basic_oop",
        "documentation": {}
    },
    {
        "label": "file_media_item",
        "kind": 5,
        "importPath": "OOP.basic_oop",
        "description": "OOP.basic_oop",
        "peekOfCode": "file_media_item = MediaItem.from_file(\"example.txt\")\nprint(file_media_item.get_title())  # Output: example",
        "detail": "OOP.basic_oop",
        "documentation": {}
    },
    {
        "label": "Product",
        "kind": 6,
        "importPath": "OOP.oop",
        "description": "OOP.oop",
        "peekOfCode": "class Product:\n    discount = 0.8\n    productlist = []\n    def __init__(self, name, price:int, quntity=0):   #constructer: when object creates then execute #here define price must be intiger\n        #run validation to recived argument\n        #assert use for makeing condition and nevigate msg to user\n        assert price >= 0 #not nessessory to write a msg but it convinent to write it \n        assert quntity >= 0,f\"{quntity} can not be less then 0\"\n        #assign self object and prints\n        self.name = name",
        "detail": "OOP.oop",
        "documentation": {}
    },
    {
        "label": "#phone",
        "kind": 5,
        "importPath": "OOP.oop",
        "description": "OOP.oop",
        "peekOfCode": "#phone = Product(\"Phone\",1000,5)\n#laptop = Product(\"Laptop\",10000,3)\n#tablate = Product(\"Tablate\",5000)      # it will take quntity as predefin\n#create a object with making fail to assert condition\n#demo = Product(\"demophone\", 1235,-2)\n#print(phone.__dict__)#print all phone object attributes\n# for instace in Product.productlist:\n#    print(instace.name)               #added item in product list\n#print(Product.productlist)     #after adding reper method it will display otwer wise it display object id\n#using class level attribute apply discount",
        "detail": "OOP.oop",
        "documentation": {}
    },
    {
        "label": "#laptop",
        "kind": 5,
        "importPath": "OOP.oop",
        "description": "OOP.oop",
        "peekOfCode": "#laptop = Product(\"Laptop\",10000,3)\n#tablate = Product(\"Tablate\",5000)      # it will take quntity as predefin\n#create a object with making fail to assert condition\n#demo = Product(\"demophone\", 1235,-2)\n#print(phone.__dict__)#print all phone object attributes\n# for instace in Product.productlist:\n#    print(instace.name)               #added item in product list\n#print(Product.productlist)     #after adding reper method it will display otwer wise it display object id\n#using class level attribute apply discount\n# phone.apply_discount()",
        "detail": "OOP.oop",
        "documentation": {}
    },
    {
        "label": "#tablate",
        "kind": 5,
        "importPath": "OOP.oop",
        "description": "OOP.oop",
        "peekOfCode": "#tablate = Product(\"Tablate\",5000)      # it will take quntity as predefin\n#create a object with making fail to assert condition\n#demo = Product(\"demophone\", 1235,-2)\n#print(phone.__dict__)#print all phone object attributes\n# for instace in Product.productlist:\n#    print(instace.name)               #added item in product list\n#print(Product.productlist)     #after adding reper method it will display otwer wise it display object id\n#using class level attribute apply discount\n# phone.apply_discount()\n#laptop.discount = 0.7",
        "detail": "OOP.oop",
        "documentation": {}
    },
    {
        "label": "#demo",
        "kind": 5,
        "importPath": "OOP.oop",
        "description": "OOP.oop",
        "peekOfCode": "#demo = Product(\"demophone\", 1235,-2)\n#print(phone.__dict__)#print all phone object attributes\n# for instace in Product.productlist:\n#    print(instace.name)               #added item in product list\n#print(Product.productlist)     #after adding reper method it will display otwer wise it display object id\n#using class level attribute apply discount\n# phone.apply_discount()\n#laptop.discount = 0.7\n#laptop.apply_discount()\n#print(phone.calculate_total_price(phone.price,phone.quntity))",
        "detail": "OOP.oop",
        "documentation": {}
    },
    {
        "label": "#laptop.discount",
        "kind": 5,
        "importPath": "OOP.oop",
        "description": "OOP.oop",
        "peekOfCode": "#laptop.discount = 0.7\n#laptop.apply_discount()\n#print(phone.calculate_total_price(phone.price,phone.quntity))\n#print(laptop.calculate_total_price())\n#call class method\n# Product.initantiate_from_csv() # create object from csv file\n# print(Product.productlist)\n#call staticmethod\nphone = Product(\"ph\",1000,12)\nphone.is_integer(5)",
        "detail": "OOP.oop",
        "documentation": {}
    },
    {
        "label": "phone",
        "kind": 5,
        "importPath": "OOP.oop",
        "description": "OOP.oop",
        "peekOfCode": "phone = Product(\"ph\",1000,12)\nphone.is_integer(5)\nprint(Product.is_integer(5.03))",
        "detail": "OOP.oop",
        "documentation": {}
    },
    {
        "label": "text",
        "kind": 5,
        "importPath": "Regular_Expression.re",
        "description": "Regular_Expression.re",
        "peekOfCode": "text = \"\"\"8320135247 its.malaythakkar@gmail.com 31/10/2002 malaythakkar.me 157.32.102.241\n          <main><h1>(999)-111-6666</h1></main> https://malaythakkar.me 123-45-6789\n          1234-5678-9012-3456\n       \"\"\"\nphone_pattern = r'\\(\\d{3}\\)-\\d{3}\\-\\d{4}|\\d{10}'\nemail_pattern = r'([a-z0-9]+[_.]{0,1}[a-z0-9]*)+@[a-z]+(\\.[a-z]{2,3}){1,2}$'\ndate_pattern = r'\\d{2}/\\d{2}/\\d{4}'\nurl_pattern = r'https?://\\S+|^[a-z0-9._%+-]+\\.[a-zA-Z]{2,}'\nipv4_pattern = r'\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b'\nhtml_tag_pattern = r'<[^>]+>'",
        "detail": "Regular_Expression.re",
        "documentation": {}
    },
    {
        "label": "phone_pattern",
        "kind": 5,
        "importPath": "Regular_Expression.re",
        "description": "Regular_Expression.re",
        "peekOfCode": "phone_pattern = r'\\(\\d{3}\\)-\\d{3}\\-\\d{4}|\\d{10}'\nemail_pattern = r'([a-z0-9]+[_.]{0,1}[a-z0-9]*)+@[a-z]+(\\.[a-z]{2,3}){1,2}$'\ndate_pattern = r'\\d{2}/\\d{2}/\\d{4}'\nurl_pattern = r'https?://\\S+|^[a-z0-9._%+-]+\\.[a-zA-Z]{2,}'\nipv4_pattern = r'\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b'\nhtml_tag_pattern = r'<[^>]+>'\nssn_pattern = r'\\d{3}-\\d{2}-\\d{4}'\ncredit_card_pattern = r'\\b(?:\\d[ -]*?){13,16}\\b'\nmatches = re.findall(phone_pattern, text)\nmatches1 = re.findall(email_pattern, text)",
        "detail": "Regular_Expression.re",
        "documentation": {}
    },
    {
        "label": "email_pattern",
        "kind": 5,
        "importPath": "Regular_Expression.re",
        "description": "Regular_Expression.re",
        "peekOfCode": "email_pattern = r'([a-z0-9]+[_.]{0,1}[a-z0-9]*)+@[a-z]+(\\.[a-z]{2,3}){1,2}$'\ndate_pattern = r'\\d{2}/\\d{2}/\\d{4}'\nurl_pattern = r'https?://\\S+|^[a-z0-9._%+-]+\\.[a-zA-Z]{2,}'\nipv4_pattern = r'\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b'\nhtml_tag_pattern = r'<[^>]+>'\nssn_pattern = r'\\d{3}-\\d{2}-\\d{4}'\ncredit_card_pattern = r'\\b(?:\\d[ -]*?){13,16}\\b'\nmatches = re.findall(phone_pattern, text)\nmatches1 = re.findall(email_pattern, text)\nmatches2 = re.findall(date_pattern, text)",
        "detail": "Regular_Expression.re",
        "documentation": {}
    },
    {
        "label": "date_pattern",
        "kind": 5,
        "importPath": "Regular_Expression.re",
        "description": "Regular_Expression.re",
        "peekOfCode": "date_pattern = r'\\d{2}/\\d{2}/\\d{4}'\nurl_pattern = r'https?://\\S+|^[a-z0-9._%+-]+\\.[a-zA-Z]{2,}'\nipv4_pattern = r'\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b'\nhtml_tag_pattern = r'<[^>]+>'\nssn_pattern = r'\\d{3}-\\d{2}-\\d{4}'\ncredit_card_pattern = r'\\b(?:\\d[ -]*?){13,16}\\b'\nmatches = re.findall(phone_pattern, text)\nmatches1 = re.findall(email_pattern, text)\nmatches2 = re.findall(date_pattern, text)\nmatches3 = re.findall(url_pattern, text)",
        "detail": "Regular_Expression.re",
        "documentation": {}
    },
    {
        "label": "url_pattern",
        "kind": 5,
        "importPath": "Regular_Expression.re",
        "description": "Regular_Expression.re",
        "peekOfCode": "url_pattern = r'https?://\\S+|^[a-z0-9._%+-]+\\.[a-zA-Z]{2,}'\nipv4_pattern = r'\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b'\nhtml_tag_pattern = r'<[^>]+>'\nssn_pattern = r'\\d{3}-\\d{2}-\\d{4}'\ncredit_card_pattern = r'\\b(?:\\d[ -]*?){13,16}\\b'\nmatches = re.findall(phone_pattern, text)\nmatches1 = re.findall(email_pattern, text)\nmatches2 = re.findall(date_pattern, text)\nmatches3 = re.findall(url_pattern, text)\nmatches4 = re.findall(ipv4_pattern, text)",
        "detail": "Regular_Expression.re",
        "documentation": {}
    },
    {
        "label": "ipv4_pattern",
        "kind": 5,
        "importPath": "Regular_Expression.re",
        "description": "Regular_Expression.re",
        "peekOfCode": "ipv4_pattern = r'\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b'\nhtml_tag_pattern = r'<[^>]+>'\nssn_pattern = r'\\d{3}-\\d{2}-\\d{4}'\ncredit_card_pattern = r'\\b(?:\\d[ -]*?){13,16}\\b'\nmatches = re.findall(phone_pattern, text)\nmatches1 = re.findall(email_pattern, text)\nmatches2 = re.findall(date_pattern, text)\nmatches3 = re.findall(url_pattern, text)\nmatches4 = re.findall(ipv4_pattern, text)\nmatches5 = re.findall(html_tag_pattern, text)",
        "detail": "Regular_Expression.re",
        "documentation": {}
    },
    {
        "label": "html_tag_pattern",
        "kind": 5,
        "importPath": "Regular_Expression.re",
        "description": "Regular_Expression.re",
        "peekOfCode": "html_tag_pattern = r'<[^>]+>'\nssn_pattern = r'\\d{3}-\\d{2}-\\d{4}'\ncredit_card_pattern = r'\\b(?:\\d[ -]*?){13,16}\\b'\nmatches = re.findall(phone_pattern, text)\nmatches1 = re.findall(email_pattern, text)\nmatches2 = re.findall(date_pattern, text)\nmatches3 = re.findall(url_pattern, text)\nmatches4 = re.findall(ipv4_pattern, text)\nmatches5 = re.findall(html_tag_pattern, text)\nmatches6 = re.findall(ssn_pattern, text)",
        "detail": "Regular_Expression.re",
        "documentation": {}
    },
    {
        "label": "ssn_pattern",
        "kind": 5,
        "importPath": "Regular_Expression.re",
        "description": "Regular_Expression.re",
        "peekOfCode": "ssn_pattern = r'\\d{3}-\\d{2}-\\d{4}'\ncredit_card_pattern = r'\\b(?:\\d[ -]*?){13,16}\\b'\nmatches = re.findall(phone_pattern, text)\nmatches1 = re.findall(email_pattern, text)\nmatches2 = re.findall(date_pattern, text)\nmatches3 = re.findall(url_pattern, text)\nmatches4 = re.findall(ipv4_pattern, text)\nmatches5 = re.findall(html_tag_pattern, text)\nmatches6 = re.findall(ssn_pattern, text)\nmatches7 = re.findall(credit_card_pattern, text)",
        "detail": "Regular_Expression.re",
        "documentation": {}
    },
    {
        "label": "credit_card_pattern",
        "kind": 5,
        "importPath": "Regular_Expression.re",
        "description": "Regular_Expression.re",
        "peekOfCode": "credit_card_pattern = r'\\b(?:\\d[ -]*?){13,16}\\b'\nmatches = re.findall(phone_pattern, text)\nmatches1 = re.findall(email_pattern, text)\nmatches2 = re.findall(date_pattern, text)\nmatches3 = re.findall(url_pattern, text)\nmatches4 = re.findall(ipv4_pattern, text)\nmatches5 = re.findall(html_tag_pattern, text)\nmatches6 = re.findall(ssn_pattern, text)\nmatches7 = re.findall(credit_card_pattern, text)\nprint(matches)",
        "detail": "Regular_Expression.re",
        "documentation": {}
    },
    {
        "label": "matches",
        "kind": 5,
        "importPath": "Regular_Expression.re",
        "description": "Regular_Expression.re",
        "peekOfCode": "matches = re.findall(phone_pattern, text)\nmatches1 = re.findall(email_pattern, text)\nmatches2 = re.findall(date_pattern, text)\nmatches3 = re.findall(url_pattern, text)\nmatches4 = re.findall(ipv4_pattern, text)\nmatches5 = re.findall(html_tag_pattern, text)\nmatches6 = re.findall(ssn_pattern, text)\nmatches7 = re.findall(credit_card_pattern, text)\nprint(matches)\nprint(matches1)",
        "detail": "Regular_Expression.re",
        "documentation": {}
    },
    {
        "label": "matches1",
        "kind": 5,
        "importPath": "Regular_Expression.re",
        "description": "Regular_Expression.re",
        "peekOfCode": "matches1 = re.findall(email_pattern, text)\nmatches2 = re.findall(date_pattern, text)\nmatches3 = re.findall(url_pattern, text)\nmatches4 = re.findall(ipv4_pattern, text)\nmatches5 = re.findall(html_tag_pattern, text)\nmatches6 = re.findall(ssn_pattern, text)\nmatches7 = re.findall(credit_card_pattern, text)\nprint(matches)\nprint(matches1)\nprint(matches2)",
        "detail": "Regular_Expression.re",
        "documentation": {}
    },
    {
        "label": "matches2",
        "kind": 5,
        "importPath": "Regular_Expression.re",
        "description": "Regular_Expression.re",
        "peekOfCode": "matches2 = re.findall(date_pattern, text)\nmatches3 = re.findall(url_pattern, text)\nmatches4 = re.findall(ipv4_pattern, text)\nmatches5 = re.findall(html_tag_pattern, text)\nmatches6 = re.findall(ssn_pattern, text)\nmatches7 = re.findall(credit_card_pattern, text)\nprint(matches)\nprint(matches1)\nprint(matches2)\nprint(matches3)",
        "detail": "Regular_Expression.re",
        "documentation": {}
    },
    {
        "label": "matches3",
        "kind": 5,
        "importPath": "Regular_Expression.re",
        "description": "Regular_Expression.re",
        "peekOfCode": "matches3 = re.findall(url_pattern, text)\nmatches4 = re.findall(ipv4_pattern, text)\nmatches5 = re.findall(html_tag_pattern, text)\nmatches6 = re.findall(ssn_pattern, text)\nmatches7 = re.findall(credit_card_pattern, text)\nprint(matches)\nprint(matches1)\nprint(matches2)\nprint(matches3)\nprint(matches4)",
        "detail": "Regular_Expression.re",
        "documentation": {}
    },
    {
        "label": "matches4",
        "kind": 5,
        "importPath": "Regular_Expression.re",
        "description": "Regular_Expression.re",
        "peekOfCode": "matches4 = re.findall(ipv4_pattern, text)\nmatches5 = re.findall(html_tag_pattern, text)\nmatches6 = re.findall(ssn_pattern, text)\nmatches7 = re.findall(credit_card_pattern, text)\nprint(matches)\nprint(matches1)\nprint(matches2)\nprint(matches3)\nprint(matches4)\nprint(matches5)",
        "detail": "Regular_Expression.re",
        "documentation": {}
    },
    {
        "label": "matches5",
        "kind": 5,
        "importPath": "Regular_Expression.re",
        "description": "Regular_Expression.re",
        "peekOfCode": "matches5 = re.findall(html_tag_pattern, text)\nmatches6 = re.findall(ssn_pattern, text)\nmatches7 = re.findall(credit_card_pattern, text)\nprint(matches)\nprint(matches1)\nprint(matches2)\nprint(matches3)\nprint(matches4)\nprint(matches5)\nprint(matches6)",
        "detail": "Regular_Expression.re",
        "documentation": {}
    },
    {
        "label": "matches6",
        "kind": 5,
        "importPath": "Regular_Expression.re",
        "description": "Regular_Expression.re",
        "peekOfCode": "matches6 = re.findall(ssn_pattern, text)\nmatches7 = re.findall(credit_card_pattern, text)\nprint(matches)\nprint(matches1)\nprint(matches2)\nprint(matches3)\nprint(matches4)\nprint(matches5)\nprint(matches6)\nprint(matches7)",
        "detail": "Regular_Expression.re",
        "documentation": {}
    },
    {
        "label": "matches7",
        "kind": 5,
        "importPath": "Regular_Expression.re",
        "description": "Regular_Expression.re",
        "peekOfCode": "matches7 = re.findall(credit_card_pattern, text)\nprint(matches)\nprint(matches1)\nprint(matches2)\nprint(matches3)\nprint(matches4)\nprint(matches5)\nprint(matches6)\nprint(matches7)",
        "detail": "Regular_Expression.re",
        "documentation": {}
    },
    {
        "label": "tt",
        "kind": 5,
        "importPath": "W3resource.Important.ESS_project.check",
        "description": "W3resource.Important.ESS_project.check",
        "peekOfCode": "tt = input(\"Enter total time (HH.MM):\").split('.')\ntt = timedelta(hours=int(tt[0]),minutes=int(tt[1]))\nindia_timezone = pytz.timezone('Asia/Kolkata')\ncurrent_time = datetime.datetime.now(india_timezone).time()\ncurrent_time_delta = datetime.timedelta(hours=current_time.hour, minutes=current_time.minute)\nflag = 0\nc = 0\ntimeseries = []\ntimelist = []\nwhile True:",
        "detail": "W3resource.Important.ESS_project.check",
        "documentation": {}
    },
    {
        "label": "tt",
        "kind": 5,
        "importPath": "W3resource.Important.ESS_project.check",
        "description": "W3resource.Important.ESS_project.check",
        "peekOfCode": "tt = timedelta(hours=int(tt[0]),minutes=int(tt[1]))\nindia_timezone = pytz.timezone('Asia/Kolkata')\ncurrent_time = datetime.datetime.now(india_timezone).time()\ncurrent_time_delta = datetime.timedelta(hours=current_time.hour, minutes=current_time.minute)\nflag = 0\nc = 0\ntimeseries = []\ntimelist = []\nwhile True:\n    if flag==0:",
        "detail": "W3resource.Important.ESS_project.check",
        "documentation": {}
    },
    {
        "label": "india_timezone",
        "kind": 5,
        "importPath": "W3resource.Important.ESS_project.check",
        "description": "W3resource.Important.ESS_project.check",
        "peekOfCode": "india_timezone = pytz.timezone('Asia/Kolkata')\ncurrent_time = datetime.datetime.now(india_timezone).time()\ncurrent_time_delta = datetime.timedelta(hours=current_time.hour, minutes=current_time.minute)\nflag = 0\nc = 0\ntimeseries = []\ntimelist = []\nwhile True:\n    if flag==0:\n        intime = input(\"In time (HH.MM):\").split('.')",
        "detail": "W3resource.Important.ESS_project.check",
        "documentation": {}
    },
    {
        "label": "current_time",
        "kind": 5,
        "importPath": "W3resource.Important.ESS_project.check",
        "description": "W3resource.Important.ESS_project.check",
        "peekOfCode": "current_time = datetime.datetime.now(india_timezone).time()\ncurrent_time_delta = datetime.timedelta(hours=current_time.hour, minutes=current_time.minute)\nflag = 0\nc = 0\ntimeseries = []\ntimelist = []\nwhile True:\n    if flag==0:\n        intime = input(\"In time (HH.MM):\").split('.')\n        intime = timedelta(hours=int(intime[0]),minutes=int(intime[1]))",
        "detail": "W3resource.Important.ESS_project.check",
        "documentation": {}
    },
    {
        "label": "current_time_delta",
        "kind": 5,
        "importPath": "W3resource.Important.ESS_project.check",
        "description": "W3resource.Important.ESS_project.check",
        "peekOfCode": "current_time_delta = datetime.timedelta(hours=current_time.hour, minutes=current_time.minute)\nflag = 0\nc = 0\ntimeseries = []\ntimelist = []\nwhile True:\n    if flag==0:\n        intime = input(\"In time (HH.MM):\").split('.')\n        intime = timedelta(hours=int(intime[0]),minutes=int(intime[1]))\n        timeseries.append(intime)",
        "detail": "W3resource.Important.ESS_project.check",
        "documentation": {}
    },
    {
        "label": "flag",
        "kind": 5,
        "importPath": "W3resource.Important.ESS_project.check",
        "description": "W3resource.Important.ESS_project.check",
        "peekOfCode": "flag = 0\nc = 0\ntimeseries = []\ntimelist = []\nwhile True:\n    if flag==0:\n        intime = input(\"In time (HH.MM):\").split('.')\n        intime = timedelta(hours=int(intime[0]),minutes=int(intime[1]))\n        timeseries.append(intime)\n        flag = 1",
        "detail": "W3resource.Important.ESS_project.check",
        "documentation": {}
    },
    {
        "label": "c",
        "kind": 5,
        "importPath": "W3resource.Important.ESS_project.check",
        "description": "W3resource.Important.ESS_project.check",
        "peekOfCode": "c = 0\ntimeseries = []\ntimelist = []\nwhile True:\n    if flag==0:\n        intime = input(\"In time (HH.MM):\").split('.')\n        intime = timedelta(hours=int(intime[0]),minutes=int(intime[1]))\n        timeseries.append(intime)\n        flag = 1\n    elif flag==1:",
        "detail": "W3resource.Important.ESS_project.check",
        "documentation": {}
    },
    {
        "label": "timeseries",
        "kind": 5,
        "importPath": "W3resource.Important.ESS_project.check",
        "description": "W3resource.Important.ESS_project.check",
        "peekOfCode": "timeseries = []\ntimelist = []\nwhile True:\n    if flag==0:\n        intime = input(\"In time (HH.MM):\").split('.')\n        intime = timedelta(hours=int(intime[0]),minutes=int(intime[1]))\n        timeseries.append(intime)\n        flag = 1\n    elif flag==1:\n        outtime = input(\"Out time (HH.MM):\").split('.')",
        "detail": "W3resource.Important.ESS_project.check",
        "documentation": {}
    },
    {
        "label": "timelist",
        "kind": 5,
        "importPath": "W3resource.Important.ESS_project.check",
        "description": "W3resource.Important.ESS_project.check",
        "peekOfCode": "timelist = []\nwhile True:\n    if flag==0:\n        intime = input(\"In time (HH.MM):\").split('.')\n        intime = timedelta(hours=int(intime[0]),minutes=int(intime[1]))\n        timeseries.append(intime)\n        flag = 1\n    elif flag==1:\n        outtime = input(\"Out time (HH.MM):\").split('.')\n        outtime = timedelta(hours=int(outtime[0]),minutes=int(outtime[1]))",
        "detail": "W3resource.Important.ESS_project.check",
        "documentation": {}
    },
    {
        "label": "entrytime",
        "kind": 5,
        "importPath": "W3resource.Important.ESS_project.check",
        "description": "W3resource.Important.ESS_project.check",
        "peekOfCode": "entrytime = timeseries[0]\nsumtime = timedelta(hours=0,minutes=0)\nfor i in timelist:\n    sumtime += i\nif c==1:\n    print(\"\\nExit time: \",entrytime + tt)\n    print(\"Remaining Hours: \",tt-(current_time_delta))\nelif c%2==1:\n    print(\"\\nRemaining Hours: \",tt-sumtime-(current_time_delta-timeseries[-1]))\n    # print(\"Break taken: \",(timeseries[-1]-entrytime)-sumtime)",
        "detail": "W3resource.Important.ESS_project.check",
        "documentation": {}
    },
    {
        "label": "sumtime",
        "kind": 5,
        "importPath": "W3resource.Important.ESS_project.check",
        "description": "W3resource.Important.ESS_project.check",
        "peekOfCode": "sumtime = timedelta(hours=0,minutes=0)\nfor i in timelist:\n    sumtime += i\nif c==1:\n    print(\"\\nExit time: \",entrytime + tt)\n    print(\"Remaining Hours: \",tt-(current_time_delta))\nelif c%2==1:\n    print(\"\\nRemaining Hours: \",tt-sumtime-(current_time_delta-timeseries[-1]))\n    # print(\"Break taken: \",(timeseries[-1]-entrytime)-sumtime)\n    print(\"Exit time: \",timeseries[-1]+(tt-sumtime))",
        "detail": "W3resource.Important.ESS_project.check",
        "documentation": {}
    },
    {
        "label": "tt",
        "kind": 5,
        "importPath": "W3resource.Important.ESS_project.time",
        "description": "W3resource.Important.ESS_project.time",
        "peekOfCode": "tt = timedelta(hours=7,minutes=30)\ncurrent_time = datetime.datetime.now().time()\ncurrent_time_delta = datetime.timedelta(hours=current_time.hour, minutes=current_time.minute)\nflag = 0\nc = 0\ntimeseries = []\ntimelist = []\nwhile True:\n    if flag==0:\n        intime = input(\"In time (HH.MM):\").split('.')",
        "detail": "W3resource.Important.ESS_project.time",
        "documentation": {}
    },
    {
        "label": "current_time",
        "kind": 5,
        "importPath": "W3resource.Important.ESS_project.time",
        "description": "W3resource.Important.ESS_project.time",
        "peekOfCode": "current_time = datetime.datetime.now().time()\ncurrent_time_delta = datetime.timedelta(hours=current_time.hour, minutes=current_time.minute)\nflag = 0\nc = 0\ntimeseries = []\ntimelist = []\nwhile True:\n    if flag==0:\n        intime = input(\"In time (HH.MM):\").split('.')\n        intime = timedelta(hours=int(intime[0]),minutes=int(intime[1]))",
        "detail": "W3resource.Important.ESS_project.time",
        "documentation": {}
    },
    {
        "label": "current_time_delta",
        "kind": 5,
        "importPath": "W3resource.Important.ESS_project.time",
        "description": "W3resource.Important.ESS_project.time",
        "peekOfCode": "current_time_delta = datetime.timedelta(hours=current_time.hour, minutes=current_time.minute)\nflag = 0\nc = 0\ntimeseries = []\ntimelist = []\nwhile True:\n    if flag==0:\n        intime = input(\"In time (HH.MM):\").split('.')\n        intime = timedelta(hours=int(intime[0]),minutes=int(intime[1]))\n        timeseries.append(intime)",
        "detail": "W3resource.Important.ESS_project.time",
        "documentation": {}
    },
    {
        "label": "flag",
        "kind": 5,
        "importPath": "W3resource.Important.ESS_project.time",
        "description": "W3resource.Important.ESS_project.time",
        "peekOfCode": "flag = 0\nc = 0\ntimeseries = []\ntimelist = []\nwhile True:\n    if flag==0:\n        intime = input(\"In time (HH.MM):\").split('.')\n        intime = timedelta(hours=int(intime[0]),minutes=int(intime[1]))\n        timeseries.append(intime)\n        flag = 1",
        "detail": "W3resource.Important.ESS_project.time",
        "documentation": {}
    },
    {
        "label": "c",
        "kind": 5,
        "importPath": "W3resource.Important.ESS_project.time",
        "description": "W3resource.Important.ESS_project.time",
        "peekOfCode": "c = 0\ntimeseries = []\ntimelist = []\nwhile True:\n    if flag==0:\n        intime = input(\"In time (HH.MM):\").split('.')\n        intime = timedelta(hours=int(intime[0]),minutes=int(intime[1]))\n        timeseries.append(intime)\n        flag = 1\n    elif flag==1:",
        "detail": "W3resource.Important.ESS_project.time",
        "documentation": {}
    },
    {
        "label": "timeseries",
        "kind": 5,
        "importPath": "W3resource.Important.ESS_project.time",
        "description": "W3resource.Important.ESS_project.time",
        "peekOfCode": "timeseries = []\ntimelist = []\nwhile True:\n    if flag==0:\n        intime = input(\"In time (HH.MM):\").split('.')\n        intime = timedelta(hours=int(intime[0]),minutes=int(intime[1]))\n        timeseries.append(intime)\n        flag = 1\n    elif flag==1:\n        outtime = input(\"Out time (HH.MM):\").split('.')",
        "detail": "W3resource.Important.ESS_project.time",
        "documentation": {}
    },
    {
        "label": "timelist",
        "kind": 5,
        "importPath": "W3resource.Important.ESS_project.time",
        "description": "W3resource.Important.ESS_project.time",
        "peekOfCode": "timelist = []\nwhile True:\n    if flag==0:\n        intime = input(\"In time (HH.MM):\").split('.')\n        intime = timedelta(hours=int(intime[0]),minutes=int(intime[1]))\n        timeseries.append(intime)\n        flag = 1\n    elif flag==1:\n        outtime = input(\"Out time (HH.MM):\").split('.')\n        outtime = timedelta(hours=int(outtime[0]),minutes=int(outtime[1]))",
        "detail": "W3resource.Important.ESS_project.time",
        "documentation": {}
    },
    {
        "label": "entrytime",
        "kind": 5,
        "importPath": "W3resource.Important.ESS_project.time",
        "description": "W3resource.Important.ESS_project.time",
        "peekOfCode": "entrytime = timeseries[0]\nsumtime = timedelta(hours=0,minutes=0)\nfor i in timelist:\n    sumtime += i\nif c==1:\n    averagebreak = timedelta(minutes=45)\n    print(\"\\nExit time: \",entrytime + averagebreak + tt)\nelif c%2==1:\n    print(\"\\nRemaining Hours: \",tt-sumtime-(current_time_delta-timeseries[-1]))\n    # print(\"Break taken: \",(timeseries[-1]-entrytime)-sumtime)",
        "detail": "W3resource.Important.ESS_project.time",
        "documentation": {}
    },
    {
        "label": "sumtime",
        "kind": 5,
        "importPath": "W3resource.Important.ESS_project.time",
        "description": "W3resource.Important.ESS_project.time",
        "peekOfCode": "sumtime = timedelta(hours=0,minutes=0)\nfor i in timelist:\n    sumtime += i\nif c==1:\n    averagebreak = timedelta(minutes=45)\n    print(\"\\nExit time: \",entrytime + averagebreak + tt)\nelif c%2==1:\n    print(\"\\nRemaining Hours: \",tt-sumtime-(current_time_delta-timeseries[-1]))\n    # print(\"Break taken: \",(timeseries[-1]-entrytime)-sumtime)\n    print(\"Exit time: \",timeseries[-1]+(tt-sumtime))",
        "detail": "W3resource.Important.ESS_project.time",
        "documentation": {}
    },
    {
        "label": "count_office_hr",
        "kind": 2,
        "importPath": "W3resource.Important.ESS_project.timecalculator",
        "description": "W3resource.Important.ESS_project.timecalculator",
        "peekOfCode": "def count_office_hr():\n    flag = 1\n    office_hours_list = []\n    # 1. Take total hours of the company as a time using timedelta\n    company_hr = input(\"Enter total hours of the company (e.g., 9.3 for 9 hours and 30 minutes): \")\n    company_hr = company_hr.split('.')\n    company_hr = timedelta(hours=int(company_hr[0]), minutes=int(company_hr[1]))\n    while flag == 1:\n        # 2. Take input for start_time and end_time as (HH:MM)\n        start_time = input(\"Enter entry time (HH:MM): \")",
        "detail": "W3resource.Important.ESS_project.timecalculator",
        "documentation": {}
    },
    {
        "label": "sum_of_count",
        "kind": 2,
        "importPath": "W3resource.Important.ESS_project.timecalculator",
        "description": "W3resource.Important.ESS_project.timecalculator",
        "peekOfCode": "def sum_of_count(office_hours_list):\n    total_hr = timedelta()\n    for entry in office_hours_list:\n        start_time = entry['start_time'].split(':')\n        end_time = entry['end_time'].split(':')\n        start_datetime = datetime.now().replace(hour=int(start_time[0]), minute=int(start_time[1]), second=0, microsecond=0)\n        end_datetime = datetime.now().replace(hour=int(end_time[0]), minute=int(end_time[1]), second=0, microsecond=0)\n        total_hr += end_datetime - start_datetime\n    return total_hr\ndef sub_time(company_hr, total_hr):",
        "detail": "W3resource.Important.ESS_project.timecalculator",
        "documentation": {}
    },
    {
        "label": "sub_time",
        "kind": 2,
        "importPath": "W3resource.Important.ESS_project.timecalculator",
        "description": "W3resource.Important.ESS_project.timecalculator",
        "peekOfCode": "def sub_time(company_hr, total_hr):\n    remaining_hr = company_hr - total_hr\n    return remaining_hr.days, remaining_hr.seconds // 3600\ndef calculate_break_time(office_hours_list):\n    total_break_time = timedelta()\n    for entry in office_hours_list:\n        start_time = entry['start_time'].split(':')\n        end_time = entry['end_time'].split(':')\n        start_datetime = datetime.now().replace(hour=int(start_time[0]), minute=int(start_time[1]), second=0, microsecond=0)\n        end_datetime = datetime.now().replace(hour=int(end_time[0]), minute=int(end_time[1]), second=0, microsecond=0)",
        "detail": "W3resource.Important.ESS_project.timecalculator",
        "documentation": {}
    },
    {
        "label": "calculate_break_time",
        "kind": 2,
        "importPath": "W3resource.Important.ESS_project.timecalculator",
        "description": "W3resource.Important.ESS_project.timecalculator",
        "peekOfCode": "def calculate_break_time(office_hours_list):\n    total_break_time = timedelta()\n    for entry in office_hours_list:\n        start_time = entry['start_time'].split(':')\n        end_time = entry['end_time'].split(':')\n        start_datetime = datetime.now().replace(hour=int(start_time[0]), minute=int(start_time[1]), second=0, microsecond=0)\n        end_datetime = datetime.now().replace(hour=int(end_time[0]), minute=int(end_time[1]), second=0, microsecond=0)\n        total_break_time += (start_datetime - end_datetime)\n    return total_break_time.days, total_break_time.seconds // 3600\ndef calculate_expected_exit_time(total_hr, break_time):",
        "detail": "W3resource.Important.ESS_project.timecalculator",
        "documentation": {}
    },
    {
        "label": "calculate_expected_exit_time",
        "kind": 2,
        "importPath": "W3resource.Important.ESS_project.timecalculator",
        "description": "W3resource.Important.ESS_project.timecalculator",
        "peekOfCode": "def calculate_expected_exit_time(total_hr, break_time):\n    expected_exit_time = datetime.now() + total_hr + timedelta(hours=break_time)\n    return expected_exit_time.strftime(\"%Y-%m-%d %H:%M\")\n# Test the function\nremaining_hr, break_time, expected_exit_time = count_office_hr()\nprint(\"Remaining office hours for the company:\", remaining_hr, \"days\", break_time, \"hours\")\nprint(\"Expected Exit Time:\", expected_exit_time)",
        "detail": "W3resource.Important.ESS_project.timecalculator",
        "documentation": {}
    },
    {
        "label": "half_trinangle",
        "kind": 2,
        "importPath": "W3resource.Important.Pattern.1_right_half_triangle",
        "description": "W3resource.Important.Pattern.1_right_half_triangle",
        "peekOfCode": "def half_trinangle(n):\n    for i in range(0,n):\n        for j in range(0,i+1):\n            print(\"* \",end=\"\")\n        print(\"\")\nhalf_trinangle(5)",
        "detail": "W3resource.Important.Pattern.1_right_half_triangle",
        "documentation": {}
    },
    {
        "label": "pattern",
        "kind": 2,
        "importPath": "W3resource.Important.Pattern.2_pyramid",
        "description": "W3resource.Important.Pattern.2_pyramid",
        "peekOfCode": "def pattern(n):\n    for i in range(1,n+1):\n        for k in range(0,n-i):\n            print(\" \" ,end=\"\")\n        for j in range(0,i):\n            print(\"* \", end=\"\")\n        print(\"\")\npattern(5)",
        "detail": "W3resource.Important.Pattern.2_pyramid",
        "documentation": {}
    },
    {
        "label": "pattern",
        "kind": 2,
        "importPath": "W3resource.Important.Pattern.3_reverse_pyramid",
        "description": "W3resource.Important.Pattern.3_reverse_pyramid",
        "peekOfCode": "def pattern(n):\n    for i in range(0,n):\n        for k in range(0,i):\n            print(\" \" ,end=\"\")\n        for j in range(0,n-i):\n            print(\"* \", end=\"\")\n        print(\"\")\npattern(5)",
        "detail": "W3resource.Important.Pattern.3_reverse_pyramid",
        "documentation": {}
    },
    {
        "label": "pattern",
        "kind": 2,
        "importPath": "W3resource.Important.Pattern.4_dimand",
        "description": "W3resource.Important.Pattern.4_dimand",
        "peekOfCode": "def pattern(n):\n    for i in range(1,n+1):\n        for k in range(0,n-i):\n            print(\" \" ,end=\"\")\n        for j in range(0,i):\n            print(\"* \", end=\"\")\n        print(\"\")\n    for i in range(0,n):\n        for k in range(0,i):\n            print(\" \" ,end=\"\")",
        "detail": "W3resource.Important.Pattern.4_dimand",
        "documentation": {}
    },
    {
        "label": "print_M",
        "kind": 2,
        "importPath": "W3resource.Important.Pattern.5_latter",
        "description": "W3resource.Important.Pattern.5_latter",
        "peekOfCode": "def print_M(n):\n    for i in range(n):\n        for j in range(n*2-1):\n            if i == n-1 or i + j == n-1 or j - i == n-1:\n                print(\"*\", end=\"\")\n            else:\n                print(\" \", end=\"\")\n        print()\nrows = 5\nprint_M(rows)",
        "detail": "W3resource.Important.Pattern.5_latter",
        "documentation": {}
    },
    {
        "label": "print_A",
        "kind": 2,
        "importPath": "W3resource.Important.Pattern.5_latter",
        "description": "W3resource.Important.Pattern.5_latter",
        "peekOfCode": "def print_A(rows):\n    pass\ndef print_L(rows):\n    pass\ndef print_Y(rows):\n    pass",
        "detail": "W3resource.Important.Pattern.5_latter",
        "documentation": {}
    },
    {
        "label": "print_L",
        "kind": 2,
        "importPath": "W3resource.Important.Pattern.5_latter",
        "description": "W3resource.Important.Pattern.5_latter",
        "peekOfCode": "def print_L(rows):\n    pass\ndef print_Y(rows):\n    pass",
        "detail": "W3resource.Important.Pattern.5_latter",
        "documentation": {}
    },
    {
        "label": "print_Y",
        "kind": 2,
        "importPath": "W3resource.Important.Pattern.5_latter",
        "description": "W3resource.Important.Pattern.5_latter",
        "peekOfCode": "def print_Y(rows):\n    pass",
        "detail": "W3resource.Important.Pattern.5_latter",
        "documentation": {}
    },
    {
        "label": "rows",
        "kind": 5,
        "importPath": "W3resource.Important.Pattern.5_latter",
        "description": "W3resource.Important.Pattern.5_latter",
        "peekOfCode": "rows = 5\nprint_M(rows)\ndef print_A(rows):\n    pass\ndef print_L(rows):\n    pass\ndef print_Y(rows):\n    pass",
        "detail": "W3resource.Important.Pattern.5_latter",
        "documentation": {}
    },
    {
        "label": "sum_of_list",
        "kind": 2,
        "importPath": "W3resource.Important.Recursion.1_sum_of_list",
        "description": "W3resource.Important.Recursion.1_sum_of_list",
        "peekOfCode": "def sum_of_list(my_list):\n    if len(my_list)==1:\n        return my_list[0]\n    else:\n        return my_list[0] + sum_of_list(my_list[1:])      \nmy_list = [5,9,6,33,6]\nprint(sum_of_list(my_list))",
        "detail": "W3resource.Important.Recursion.1_sum_of_list",
        "documentation": {}
    },
    {
        "label": "my_list",
        "kind": 5,
        "importPath": "W3resource.Important.Recursion.1_sum_of_list",
        "description": "W3resource.Important.Recursion.1_sum_of_list",
        "peekOfCode": "my_list = [5,9,6,33,6]\nprint(sum_of_list(my_list))",
        "detail": "W3resource.Important.Recursion.1_sum_of_list",
        "documentation": {}
    },
    {
        "label": "sum_of_postive_int",
        "kind": 2,
        "importPath": "W3resource.Important.Recursion.2_sum_of_n_num",
        "description": "W3resource.Important.Recursion.2_sum_of_n_num",
        "peekOfCode": "def sum_of_postive_int(num):\n    if num == 0:\n        return 0\n    else:\n        return num + sum_of_postive_int(num-1)\nprint(sum_of_postive_int(9))",
        "detail": "W3resource.Important.Recursion.2_sum_of_n_num",
        "documentation": {}
    },
    {
        "label": "fibonacci",
        "kind": 2,
        "importPath": "W3resource.Important.Recursion.3_fibonacci _series",
        "description": "W3resource.Important.Recursion.3_fibonacci _series",
        "peekOfCode": "def fibonacci(num):\n    if num == 0:\n       return 0\n    elif num == 1:\n        return 1\n    else:\n        return fibonacci(num-1)+fibonacci(num-2)\nprint(fibonacci(4))",
        "detail": "W3resource.Important.Recursion.3_fibonacci _series",
        "documentation": {}
    },
    {
        "label": "binary_search",
        "kind": 2,
        "importPath": "W3resource.Important.Recursion.4_binary_search",
        "description": "W3resource.Important.Recursion.4_binary_search",
        "peekOfCode": "def binary_search(my_list, num, l, r):\n    while r >= l:\n        mid = (l + r) // 2\n        if num == my_list[mid]:\n            return mid\n        if my_list[mid] < num:\n            return binary_search(my_list, num, mid + 1, r)\n        elif my_list[mid] > num:\n            return binary_search(my_list, num, l, mid - 1)\n    return -1  # Element not found",
        "detail": "W3resource.Important.Recursion.4_binary_search",
        "documentation": {}
    },
    {
        "label": "my_list",
        "kind": 5,
        "importPath": "W3resource.Important.Recursion.4_binary_search",
        "description": "W3resource.Important.Recursion.4_binary_search",
        "peekOfCode": "my_list = [6, 3, 2, 5, 8, 9, 7, 4, 1, 2]\nmy_list.sort()\nprint(my_list)\nprint(\"index: \", binary_search(my_list, 5, 0, len(my_list) - 1))",
        "detail": "W3resource.Important.Recursion.4_binary_search",
        "documentation": {}
    },
    {
        "label": "factorial",
        "kind": 2,
        "importPath": "W3resource.Important.Recursion.factorial",
        "description": "W3resource.Important.Recursion.factorial",
        "peekOfCode": "def factorial(num):\n    if num == 0 or num == 1:\n        return 1\n    else:\n        return num * factorial(num-1)\nprint(factorial(5))",
        "detail": "W3resource.Important.Recursion.factorial",
        "documentation": {}
    },
    {
        "label": "bubblesort",
        "kind": 2,
        "importPath": "W3resource.Important.sorting.Bubble_sort",
        "description": "W3resource.Important.sorting.Bubble_sort",
        "peekOfCode": "def bubblesort(my_list):\n    for i in range(0,len(my_list)-1):\n        for j in range(0,len(my_list)-i-1):\n            if my_list[j]>my_list[j+1]:\n                my_list[j],my_list[j+1] = my_list[j+1],my_list[j]\n    return my_list\nmy_list = [5,9,3,1,2,7]\nprint(bubblesort(my_list))",
        "detail": "W3resource.Important.sorting.Bubble_sort",
        "documentation": {}
    },
    {
        "label": "my_list",
        "kind": 5,
        "importPath": "W3resource.Important.sorting.Bubble_sort",
        "description": "W3resource.Important.sorting.Bubble_sort",
        "peekOfCode": "my_list = [5,9,3,1,2,7]\nprint(bubblesort(my_list))",
        "detail": "W3resource.Important.sorting.Bubble_sort",
        "documentation": {}
    },
    {
        "label": "factorial",
        "kind": 2,
        "importPath": "W3resource.Important.decorators",
        "description": "W3resource.Important.decorators",
        "peekOfCode": "def factorial(n):\n    if n == 0 or n == 1:\n        return 1\n    else:\n        return n*factorial(n-1)\ndef decorater(func):\n    def innerfunction(n):\n        if n >= 0:\n            return func(n)\n        else:",
        "detail": "W3resource.Important.decorators",
        "documentation": {}
    },
    {
        "label": "decorater",
        "kind": 2,
        "importPath": "W3resource.Important.decorators",
        "description": "W3resource.Important.decorators",
        "peekOfCode": "def decorater(func):\n    def innerfunction(n):\n        if n >= 0:\n            return func(n)\n        else:\n            return ValueError(\"N can not be negative\")  \n    return innerfunction\nfactorial = decorater(factorial)\nprint(factorial(5))\n#============================",
        "detail": "W3resource.Important.decorators",
        "documentation": {}
    },
    {
        "label": "decoraterfunc",
        "kind": 2,
        "importPath": "W3resource.Important.decorators",
        "description": "W3resource.Important.decorators",
        "peekOfCode": "def decoraterfunc(func):\n    def wrapper(n):\n        if n <= 0:\n            return ValueError(\"N can not be negative or zero\")\n        else:\n            return func(n)\n    return wrapper\n@decoraterfunc\ndef factorial2(n):\n    if n == 0 or n == 1:",
        "detail": "W3resource.Important.decorators",
        "documentation": {}
    },
    {
        "label": "factorial2",
        "kind": 2,
        "importPath": "W3resource.Important.decorators",
        "description": "W3resource.Important.decorators",
        "peekOfCode": "def factorial2(n):\n    if n == 0 or n == 1:\n        return 1\n    else:\n        return n*factorial(n-1)\nprint(factorial2(-10))",
        "detail": "W3resource.Important.decorators",
        "documentation": {}
    },
    {
        "label": "factorial",
        "kind": 5,
        "importPath": "W3resource.Important.decorators",
        "description": "W3resource.Important.decorators",
        "peekOfCode": "factorial = decorater(factorial)\nprint(factorial(5))\n#============================\ndef decoraterfunc(func):\n    def wrapper(n):\n        if n <= 0:\n            return ValueError(\"N can not be negative or zero\")\n        else:\n            return func(n)\n    return wrapper",
        "detail": "W3resource.Important.decorators",
        "documentation": {}
    },
    {
        "label": "factorial",
        "kind": 2,
        "importPath": "W3resource.Important.genrator",
        "description": "W3resource.Important.genrator",
        "peekOfCode": "def factorial(num):\n    n = 1\n    result = 1\n    while n <= num:\n        result *= n\n        yield result\n        n += 1\nfor value in factorial(5):\n    print(value)\n#===========================================",
        "detail": "W3resource.Important.genrator",
        "documentation": {}
    },
    {
        "label": "fibonacci_generator",
        "kind": 2,
        "importPath": "W3resource.Important.genrator",
        "description": "W3resource.Important.genrator",
        "peekOfCode": "def fibonacci_generator(limit=10):\n    a, b = 0, 1\n    count = 0\n    while count < limit:\n        yield a\n        a, b = b, a + b\n        count += 1\n# Using the generator function\nfor value in fibonacci_generator(9):\n    print(value)",
        "detail": "W3resource.Important.genrator",
        "documentation": {}
    },
    {
        "label": "Finditrator",
        "kind": 6,
        "importPath": "W3resource.Important.iterator",
        "description": "W3resource.Important.iterator",
        "peekOfCode": "class Finditrator:\n    def __init__(self):\n        self.mystr =\"abcdiouefghkl\"\n    def __iter__(self):\n        return self\n    def __next__(self):\n        mylist=[]\n        for i in self.mystr:\n            if i=='a' or i=='e' or i=='i' or i=='o' or i=='u':\n                yield i",
        "detail": "W3resource.Important.iterator",
        "documentation": {}
    },
    {
        "label": "char",
        "kind": 5,
        "importPath": "W3resource.Important.iterator",
        "description": "W3resource.Important.iterator",
        "peekOfCode": "char = Finditrator()\nprint(char.__next__())\nprint(char.__next__())\nprint(char.__next__())\nprint(char.__next__())\n# for i in char:\n    # print(i.next())",
        "detail": "W3resource.Important.iterator",
        "documentation": {}
    },
    {
        "label": "d",
        "kind": 5,
        "importPath": "W3resource.List.all",
        "description": "W3resource.List.all",
        "peekOfCode": "d = pandas.DataFrame()",
        "detail": "W3resource.List.all",
        "documentation": {}
    },
    {
        "label": "my_list",
        "kind": 5,
        "importPath": "W3resource.List.find_max_min",
        "description": "W3resource.List.find_max_min",
        "peekOfCode": "my_list = [9,6,3,2,4,5,8,7,1,2,3,6,9,99,6,3,5,5,65,65,6,6,3,698,6,0,2,3,56]\nmax = -96985698569856\nmin = 0\nif len(my_list):\n    for i in my_list:\n        if min > i:\n            min = i\n        elif max < i:\n            max = i\nprint(f\"max number in list {max} and minimum number is {min}\")",
        "detail": "W3resource.List.find_max_min",
        "documentation": {}
    },
    {
        "label": "max",
        "kind": 5,
        "importPath": "W3resource.List.find_max_min",
        "description": "W3resource.List.find_max_min",
        "peekOfCode": "max = -96985698569856\nmin = 0\nif len(my_list):\n    for i in my_list:\n        if min > i:\n            min = i\n        elif max < i:\n            max = i\nprint(f\"max number in list {max} and minimum number is {min}\")",
        "detail": "W3resource.List.find_max_min",
        "documentation": {}
    },
    {
        "label": "min",
        "kind": 5,
        "importPath": "W3resource.List.find_max_min",
        "description": "W3resource.List.find_max_min",
        "peekOfCode": "min = 0\nif len(my_list):\n    for i in my_list:\n        if min > i:\n            min = i\n        elif max < i:\n            max = i\nprint(f\"max number in list {max} and minimum number is {min}\")",
        "detail": "W3resource.List.find_max_min",
        "documentation": {}
    },
    {
        "label": "my_list",
        "kind": 5,
        "importPath": "W3resource.List.sum_of_list",
        "description": "W3resource.List.sum_of_list",
        "peekOfCode": "my_list = [2,39,6,3,8,5,2,1,4,7,4]\nsum = 0\nfor i in my_list:\n    sum += i\nprint(sum)",
        "detail": "W3resource.List.sum_of_list",
        "documentation": {}
    },
    {
        "label": "sum",
        "kind": 5,
        "importPath": "W3resource.List.sum_of_list",
        "description": "W3resource.List.sum_of_list",
        "peekOfCode": "sum = 0\nfor i in my_list:\n    sum += i\nprint(sum)",
        "detail": "W3resource.List.sum_of_list",
        "documentation": {}
    },
    {
        "label": "value",
        "kind": 5,
        "importPath": "W3resource.Part1.10_sum_of_n_nn_nnn",
        "description": "W3resource.Part1.10_sum_of_n_nn_nnn",
        "peekOfCode": "value = input(\"Enter value: \")\nv1 = value+value\nv2 = value+value+value\nintvalue1 =int(value)\nintvalue2 =int(v1)\nintvalue3 =int(v2)\nans = intvalue1+intvalue2+intvalue3\nprint(\"your n + nn + nnn = \",ans)",
        "detail": "W3resource.Part1.10_sum_of_n_nn_nnn",
        "documentation": {}
    },
    {
        "label": "v1",
        "kind": 5,
        "importPath": "W3resource.Part1.10_sum_of_n_nn_nnn",
        "description": "W3resource.Part1.10_sum_of_n_nn_nnn",
        "peekOfCode": "v1 = value+value\nv2 = value+value+value\nintvalue1 =int(value)\nintvalue2 =int(v1)\nintvalue3 =int(v2)\nans = intvalue1+intvalue2+intvalue3\nprint(\"your n + nn + nnn = \",ans)",
        "detail": "W3resource.Part1.10_sum_of_n_nn_nnn",
        "documentation": {}
    },
    {
        "label": "v2",
        "kind": 5,
        "importPath": "W3resource.Part1.10_sum_of_n_nn_nnn",
        "description": "W3resource.Part1.10_sum_of_n_nn_nnn",
        "peekOfCode": "v2 = value+value+value\nintvalue1 =int(value)\nintvalue2 =int(v1)\nintvalue3 =int(v2)\nans = intvalue1+intvalue2+intvalue3\nprint(\"your n + nn + nnn = \",ans)",
        "detail": "W3resource.Part1.10_sum_of_n_nn_nnn",
        "documentation": {}
    },
    {
        "label": "ans",
        "kind": 5,
        "importPath": "W3resource.Part1.10_sum_of_n_nn_nnn",
        "description": "W3resource.Part1.10_sum_of_n_nn_nnn",
        "peekOfCode": "ans = intvalue1+intvalue2+intvalue3\nprint(\"your n + nn + nnn = \",ans)",
        "detail": "W3resource.Part1.10_sum_of_n_nn_nnn",
        "documentation": {}
    },
    {
        "label": "day_difference",
        "kind": 5,
        "importPath": "W3resource.Part1.12_ calender",
        "description": "W3resource.Part1.12_ calender",
        "peekOfCode": "day_difference = (date(2024, 10, 31) - date(2002, 10, 31)).days\n# year_difference = (date(2024, 10, 31) - date(2002, 10, 31)).years\nprint(\"day diff \",day_difference)",
        "detail": "W3resource.Part1.12_ calender",
        "documentation": {}
    },
    {
        "label": "date_1",
        "kind": 5,
        "importPath": "W3resource.Part1.14_count_days",
        "description": "W3resource.Part1.14_count_days",
        "peekOfCode": "date_1 = date(2024,1,1)\ndate_2 = date(2024,1,19)\ntotalday = (date_2 -date_1).days\nprint(totalday)",
        "detail": "W3resource.Part1.14_count_days",
        "documentation": {}
    },
    {
        "label": "date_2",
        "kind": 5,
        "importPath": "W3resource.Part1.14_count_days",
        "description": "W3resource.Part1.14_count_days",
        "peekOfCode": "date_2 = date(2024,1,19)\ntotalday = (date_2 -date_1).days\nprint(totalday)",
        "detail": "W3resource.Part1.14_count_days",
        "documentation": {}
    },
    {
        "label": "totalday",
        "kind": 5,
        "importPath": "W3resource.Part1.14_count_days",
        "description": "W3resource.Part1.14_count_days",
        "peekOfCode": "totalday = (date_2 -date_1).days\nprint(totalday)",
        "detail": "W3resource.Part1.14_count_days",
        "documentation": {}
    },
    {
        "label": "radius",
        "kind": 5,
        "importPath": "W3resource.Part1.15_volume_of_sphere",
        "description": "W3resource.Part1.15_volume_of_sphere",
        "peekOfCode": "radius = float(input(\"Enter the radius of the sphere: \"))\nvolume = (4/3) * math.pi * (radius**3)\nprint(\"When the radius is {}, the volume is {:.2f}\".format(radius, volume))",
        "detail": "W3resource.Part1.15_volume_of_sphere",
        "documentation": {}
    },
    {
        "label": "volume",
        "kind": 5,
        "importPath": "W3resource.Part1.15_volume_of_sphere",
        "description": "W3resource.Part1.15_volume_of_sphere",
        "peekOfCode": "volume = (4/3) * math.pi * (radius**3)\nprint(\"When the radius is {}, the volume is {:.2f}\".format(radius, volume))",
        "detail": "W3resource.Part1.15_volume_of_sphere",
        "documentation": {}
    },
    {
        "label": "sum_thrice",
        "kind": 2,
        "importPath": "W3resource.Part1.17_sum_of_three_numbers",
        "description": "W3resource.Part1.17_sum_of_three_numbers",
        "peekOfCode": "def sum_thrice(x, y, z):\n    sum = x + y + z\n    if x == y == z:\n        sum = sum * 3\n    return sum\nprint(sum_thrice(1, 2, 3))\nprint(sum_thrice(3, 3, 3))",
        "detail": "W3resource.Part1.17_sum_of_three_numbers",
        "documentation": {}
    },
    {
        "label": "value",
        "kind": 5,
        "importPath": "W3resource.Part1.19_ODD_EVEN",
        "description": "W3resource.Part1.19_ODD_EVEN",
        "peekOfCode": "value = int(input(\"Enter Number: \"))\nif value % 2 != 0:\n    print(\"ODD number\")\nelse:\n    print(\"Number is Even\")",
        "detail": "W3resource.Part1.19_ODD_EVEN",
        "documentation": {}
    },
    {
        "label": "inputlist",
        "kind": 5,
        "importPath": "W3resource.Part1.20_count",
        "description": "W3resource.Part1.20_count",
        "peekOfCode": "inputlist = input(\"Enter list coma seprated: \")\nfinallist = [int(x) for x in inputlist.split(\",\")]\nprint(finallist)\ncount = 0\nfor i in finallist:\n    if i==4:\n        count+=1\nprint(count)",
        "detail": "W3resource.Part1.20_count",
        "documentation": {}
    },
    {
        "label": "finallist",
        "kind": 5,
        "importPath": "W3resource.Part1.20_count",
        "description": "W3resource.Part1.20_count",
        "peekOfCode": "finallist = [int(x) for x in inputlist.split(\",\")]\nprint(finallist)\ncount = 0\nfor i in finallist:\n    if i==4:\n        count+=1\nprint(count)",
        "detail": "W3resource.Part1.20_count",
        "documentation": {}
    },
    {
        "label": "count",
        "kind": 5,
        "importPath": "W3resource.Part1.20_count",
        "description": "W3resource.Part1.20_count",
        "peekOfCode": "count = 0\nfor i in finallist:\n    if i==4:\n        count+=1\nprint(count)",
        "detail": "W3resource.Part1.20_count",
        "documentation": {}
    },
    {
        "label": "char",
        "kind": 5,
        "importPath": "W3resource.Part1.21_isvowel_char",
        "description": "W3resource.Part1.21_isvowel_char",
        "peekOfCode": "char = input(\"Enter char: \")\nvowel=\"aeiouAEIOU\"\nflag = 0\nfor char in vowel:\n    print(\"true\")\nfor cha in vowel:\n    if(i==char):\n        flag = 1\nif(flag == 1):\n    print(\"T\")",
        "detail": "W3resource.Part1.21_isvowel_char",
        "documentation": {}
    },
    {
        "label": "flag",
        "kind": 5,
        "importPath": "W3resource.Part1.21_isvowel_char",
        "description": "W3resource.Part1.21_isvowel_char",
        "peekOfCode": "flag = 0\nfor char in vowel:\n    print(\"true\")\nfor cha in vowel:\n    if(i==char):\n        flag = 1\nif(flag == 1):\n    print(\"T\")\nelse:\n    print(\"F\")",
        "detail": "W3resource.Part1.21_isvowel_char",
        "documentation": {}
    },
    {
        "label": "mylist",
        "kind": 5,
        "importPath": "W3resource.Part1.22_histogram",
        "description": "W3resource.Part1.22_histogram",
        "peekOfCode": "mylist = [3, 1,2]\nfor i in range(len(mylist)):\n    for y in range(mylist[i]):\n        print(\"M\", end=\"\")\n    print()",
        "detail": "W3resource.Part1.22_histogram",
        "documentation": {}
    },
    {
        "label": "r",
        "kind": 5,
        "importPath": "W3resource.Part1.23_calculate_intrest",
        "description": "W3resource.Part1.23_calculate_intrest",
        "peekOfCode": "r = 7.0\np = 5000.0\nn = 2 \ni = (p*r*n)/100\nprint(i)",
        "detail": "W3resource.Part1.23_calculate_intrest",
        "documentation": {}
    },
    {
        "label": "p",
        "kind": 5,
        "importPath": "W3resource.Part1.23_calculate_intrest",
        "description": "W3resource.Part1.23_calculate_intrest",
        "peekOfCode": "p = 5000.0\nn = 2 \ni = (p*r*n)/100\nprint(i)",
        "detail": "W3resource.Part1.23_calculate_intrest",
        "documentation": {}
    },
    {
        "label": "n",
        "kind": 5,
        "importPath": "W3resource.Part1.23_calculate_intrest",
        "description": "W3resource.Part1.23_calculate_intrest",
        "peekOfCode": "n = 2 \ni = (p*r*n)/100\nprint(i)",
        "detail": "W3resource.Part1.23_calculate_intrest",
        "documentation": {}
    },
    {
        "label": "i",
        "kind": 5,
        "importPath": "W3resource.Part1.23_calculate_intrest",
        "description": "W3resource.Part1.23_calculate_intrest",
        "peekOfCode": "i = (p*r*n)/100\nprint(i)",
        "detail": "W3resource.Part1.23_calculate_intrest",
        "documentation": {}
    },
    {
        "label": "distance",
        "kind": 5,
        "importPath": "W3resource.Part1.24_calculat_dist",
        "description": "W3resource.Part1.24_calculat_dist",
        "peekOfCode": "distance = math.sqrt(((p1[0] - p2[0]) ** 2) + ((p1[1] - p2[1]) ** 2))\nprint(distance)",
        "detail": "W3resource.Part1.24_calculat_dist",
        "documentation": {}
    },
    {
        "label": "current_data",
        "kind": 5,
        "importPath": "W3resource.Part1.3_datetime",
        "description": "W3resource.Part1.3_datetime",
        "peekOfCode": "current_data = datetime.datetime.now() \nprint(\"Current Date and time: \" + current_data.strftime(\"%Y-%m-%d %H:%M:%S\"))\nfrom datetime import datetime\nprint(\"Current Date and Time:\", datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\"))",
        "detail": "W3resource.Part1.3_datetime",
        "documentation": {}
    },
    {
        "label": "radius",
        "kind": 5,
        "importPath": "W3resource.Part1.4_circle radius",
        "description": "W3resource.Part1.4_circle radius",
        "peekOfCode": "radius = float(input(\"Enter The Radius: \"))\nprint(\"area of circle: \", pi*(radius**2))",
        "detail": "W3resource.Part1.4_circle radius",
        "documentation": {}
    },
    {
        "label": "first_name",
        "kind": 5,
        "importPath": "W3resource.Part1.5_reverce_by_word",
        "description": "W3resource.Part1.5_reverce_by_word",
        "peekOfCode": "first_name = input(\"Enter First name: \")\nlast_name = input(\"Enter Last name: \")\nprint(first_name + \" \"+ last_name)\nprint(last_name + \" \" +first_name)",
        "detail": "W3resource.Part1.5_reverce_by_word",
        "documentation": {}
    },
    {
        "label": "last_name",
        "kind": 5,
        "importPath": "W3resource.Part1.5_reverce_by_word",
        "description": "W3resource.Part1.5_reverce_by_word",
        "peekOfCode": "last_name = input(\"Enter Last name: \")\nprint(first_name + \" \"+ last_name)\nprint(last_name + \" \" +first_name)",
        "detail": "W3resource.Part1.5_reverce_by_word",
        "documentation": {}
    },
    {
        "label": "inputs",
        "kind": 5,
        "importPath": "W3resource.Part1.6_create_List_Tuple_from_user_input",
        "description": "W3resource.Part1.6_create_List_Tuple_from_user_input",
        "peekOfCode": "inputs = input(\"Enter input with coma seprate: \")\nlist =inputs.split(\",\")\ntuple=tuple(list)\nprint(list)\nprint(tuple)",
        "detail": "W3resource.Part1.6_create_List_Tuple_from_user_input",
        "documentation": {}
    },
    {
        "label": "input_string",
        "kind": 5,
        "importPath": "W3resource.Part1.6_word_count_in_list",
        "description": "W3resource.Part1.6_word_count_in_list",
        "peekOfCode": "input_string = input(\"Enter string: \")\nword_list = input_string.split()\nword_freq = [word_list.count(n) for n in word_list]\nprint(\"List:\\n{}\\n\".format(str(word_list)))\nprint(\"Pairs (Words and Frequencies: \\n {}\".format(str(list(zip(word_list, word_freq)))))",
        "detail": "W3resource.Part1.6_word_count_in_list",
        "documentation": {}
    },
    {
        "label": "word_list",
        "kind": 5,
        "importPath": "W3resource.Part1.6_word_count_in_list",
        "description": "W3resource.Part1.6_word_count_in_list",
        "peekOfCode": "word_list = input_string.split()\nword_freq = [word_list.count(n) for n in word_list]\nprint(\"List:\\n{}\\n\".format(str(word_list)))\nprint(\"Pairs (Words and Frequencies: \\n {}\".format(str(list(zip(word_list, word_freq)))))",
        "detail": "W3resource.Part1.6_word_count_in_list",
        "documentation": {}
    },
    {
        "label": "word_freq",
        "kind": 5,
        "importPath": "W3resource.Part1.6_word_count_in_list",
        "description": "W3resource.Part1.6_word_count_in_list",
        "peekOfCode": "word_freq = [word_list.count(n) for n in word_list]\nprint(\"List:\\n{}\\n\".format(str(word_list)))\nprint(\"Pairs (Words and Frequencies: \\n {}\".format(str(list(zip(word_list, word_freq)))))",
        "detail": "W3resource.Part1.6_word_count_in_list",
        "documentation": {}
    },
    {
        "label": "list",
        "kind": 5,
        "importPath": "W3resource.Part1.8_access_first_and_last_element_in_list",
        "description": "W3resource.Part1.8_access_first_and_last_element_in_list",
        "peekOfCode": "list = input(\"Enter list coma seperated: \")\nfinallist = list.split(\",\")\nprint(\"first element is \" + finallist[0] + \" and last element is \" + finallist[-1])",
        "detail": "W3resource.Part1.8_access_first_and_last_element_in_list",
        "documentation": {}
    },
    {
        "label": "finallist",
        "kind": 5,
        "importPath": "W3resource.Part1.8_access_first_and_last_element_in_list",
        "description": "W3resource.Part1.8_access_first_and_last_element_in_list",
        "peekOfCode": "finallist = list.split(\",\")\nprint(\"first element is \" + finallist[0] + \" and last element is \" + finallist[-1])",
        "detail": "W3resource.Part1.8_access_first_and_last_element_in_list",
        "documentation": {}
    },
    {
        "label": "color",
        "kind": 5,
        "importPath": "W3resource.Part1.8_first_last_element_list",
        "description": "W3resource.Part1.8_first_last_element_list",
        "peekOfCode": "color = input(\"enter coloer list seprated by coma: \")\nlistcolor=color.split(\",\")\nprint(\"first element is {} and last element is {}\".format(listcolor[0],listcolor[-1]))",
        "detail": "W3resource.Part1.8_first_last_element_list",
        "documentation": {}
    },
    {
        "label": "date",
        "kind": 5,
        "importPath": "W3resource.Part1.9_extrect_date",
        "description": "W3resource.Part1.9_extrect_date",
        "peekOfCode": "date = input(\"Enter date with coma separated: \")\ndatelist = date.split(\",\")\ndatetuple = tuple(datelist)\nint_date_tuple= tuple(map(int,datetuple))\nprint(\"your date is %i / %i / `%i\"%int_date_tuple)",
        "detail": "W3resource.Part1.9_extrect_date",
        "documentation": {}
    },
    {
        "label": "datelist",
        "kind": 5,
        "importPath": "W3resource.Part1.9_extrect_date",
        "description": "W3resource.Part1.9_extrect_date",
        "peekOfCode": "datelist = date.split(\",\")\ndatetuple = tuple(datelist)\nint_date_tuple= tuple(map(int,datetuple))\nprint(\"your date is %i / %i / `%i\"%int_date_tuple)",
        "detail": "W3resource.Part1.9_extrect_date",
        "documentation": {}
    },
    {
        "label": "datetuple",
        "kind": 5,
        "importPath": "W3resource.Part1.9_extrect_date",
        "description": "W3resource.Part1.9_extrect_date",
        "peekOfCode": "datetuple = tuple(datelist)\nint_date_tuple= tuple(map(int,datetuple))\nprint(\"your date is %i / %i / `%i\"%int_date_tuple)",
        "detail": "W3resource.Part1.9_extrect_date",
        "documentation": {}
    },
    {
        "label": "print_spiral",
        "kind": 2,
        "importPath": "W3resource.Part1.matrix_print_inspiral",
        "description": "W3resource.Part1.matrix_print_inspiral",
        "peekOfCode": "def print_spiral(matrix):\n    while matrix:\n        # Print the first row\n        print(matrix.pop(0), end=\" \")\n        # Print the last column\n        if matrix and matrix[0]:\n            for row in matrix:\n                print(row.pop(), end=\" \")\n        # Print the last row in reverse\n        if matrix:",
        "detail": "W3resource.Part1.matrix_print_inspiral",
        "documentation": {}
    },
    {
        "label": "matrix",
        "kind": 5,
        "importPath": "W3resource.Part1.matrix_print_inspiral",
        "description": "W3resource.Part1.matrix_print_inspiral",
        "peekOfCode": "matrix = [\n    [1, 2, 3, 4],\n    [5, 6, 7, 8],\n    [9, 10, 11, 12],\n    [13, 14, 15, 16]\n]\nprint_spiral(matrix)",
        "detail": "W3resource.Part1.matrix_print_inspiral",
        "documentation": {}
    },
    {
        "label": "isunique",
        "kind": 2,
        "importPath": "W3resource.Part2.1_isunique_num",
        "description": "W3resource.Part2.1_isunique_num",
        "peekOfCode": "def isunique(num):\n    if len(num) == len(set(num)):\n        return True\n    else:\n        return False\nprint(isunique([1,2,3,4,6]))\nprint(isunique([]))\nprint(isunique([1,2,3,1,5,6]))\n#map number using map",
        "detail": "W3resource.Part2.1_isunique_num",
        "documentation": {}
    },
    {
        "label": "toString",
        "kind": 2,
        "importPath": "W3resource.Part2.2_permutation_string",
        "description": "W3resource.Part2.2_permutation_string",
        "peekOfCode": "def toString(List): \n\treturn ''.join(List) \ndef permute(a, l, r): \n\tif l == r: \n\t\tprint(toString(a)) \n\telse: \n\t\tfor i in range(l, r): \n\t\t\ta[l], a[i] = a[i], a[l] \n\t\t\tpermute(a, l+1, r) \n\t\t\ta[l], a[i] = a[i], a[l] # backtrack ",
        "detail": "W3resource.Part2.2_permutation_string",
        "documentation": {}
    },
    {
        "label": "permute",
        "kind": 2,
        "importPath": "W3resource.Part2.2_permutation_string",
        "description": "W3resource.Part2.2_permutation_string",
        "peekOfCode": "def permute(a, l, r): \n\tif l == r: \n\t\tprint(toString(a)) \n\telse: \n\t\tfor i in range(l, r): \n\t\t\ta[l], a[i] = a[i], a[l] \n\t\t\tpermute(a, l+1, r) \n\t\t\ta[l], a[i] = a[i], a[l] # backtrack \nstring = \"aeiou\"\nn = len(string) ",
        "detail": "W3resource.Part2.2_permutation_string",
        "documentation": {}
    },
    {
        "label": "string",
        "kind": 5,
        "importPath": "W3resource.Part2.2_permutation_string",
        "description": "W3resource.Part2.2_permutation_string",
        "peekOfCode": "string = \"aeiou\"\nn = len(string) \na = list(string) \n# Function call \npermute(a, 0, n) \n# This code is contributed by Bhavya Jain",
        "detail": "W3resource.Part2.2_permutation_string",
        "documentation": {}
    },
    {
        "label": "n",
        "kind": 5,
        "importPath": "W3resource.Part2.2_permutation_string",
        "description": "W3resource.Part2.2_permutation_string",
        "peekOfCode": "n = len(string) \na = list(string) \n# Function call \npermute(a, 0, n) \n# This code is contributed by Bhavya Jain",
        "detail": "W3resource.Part2.2_permutation_string",
        "documentation": {}
    },
    {
        "label": "a",
        "kind": 5,
        "importPath": "W3resource.Part2.2_permutation_string",
        "description": "W3resource.Part2.2_permutation_string",
        "peekOfCode": "a = list(string) \n# Function call \npermute(a, 0, n) \n# This code is contributed by Bhavya Jain",
        "detail": "W3resource.Part2.2_permutation_string",
        "documentation": {}
    },
    {
        "label": "date_print_module",
        "kind": 2,
        "importPath": "W3resource.countdate",
        "description": "W3resource.countdate",
        "peekOfCode": "def date_print_module(no_of_month,year):\n    my_list = []\n    for i in range(1,no_of_month+1):    \n        days_in_month = calendar.monthrange(year,i)[1]\n        my_list.append([days_in_month]) \n        #my_list.append([x for x in range(1,days_in_month+1)])\n    print(\"using calender: \", my_list)\n #==========================using recursion ==========================\ndef date_print_recursion(no_of_month, year, month=1, result=[]):\n    if month > no_of_month:",
        "detail": "W3resource.countdate",
        "documentation": {}
    },
    {
        "label": "date_print_recursion",
        "kind": 2,
        "importPath": "W3resource.countdate",
        "description": "W3resource.countdate",
        "peekOfCode": "def date_print_recursion(no_of_month, year, month=1, result=[]):\n    if month > no_of_month:\n        print(\"using recursion: \", result)\n        return\n    days_in_month = calendar.monthrange(year, month)[1]\n    result.append([days_in_month])\n    date_print_recursion(no_of_month, year, month + 1, result)\n#==========================using if else ==========================\ndef is_leap_year(year):\n    if(year%4==0 and year%100!=0 or year%400==0): ",
        "detail": "W3resource.countdate",
        "documentation": {}
    },
    {
        "label": "is_leap_year",
        "kind": 2,
        "importPath": "W3resource.countdate",
        "description": "W3resource.countdate",
        "peekOfCode": "def is_leap_year(year):\n    if(year%4==0 and year%100!=0 or year%400==0): \n        return True\n    else: \n        return False\ndef date_print_if_else(no_of_month,year):\n    my_list = []\n    for i in range(1,no_of_month+1):\n        if i == 1 or i == 3 or i == 5 or i == 7 or i == 8 or i == 10 or i == 12:\n            my_list.append([31])",
        "detail": "W3resource.countdate",
        "documentation": {}
    },
    {
        "label": "date_print_if_else",
        "kind": 2,
        "importPath": "W3resource.countdate",
        "description": "W3resource.countdate",
        "peekOfCode": "def date_print_if_else(no_of_month,year):\n    my_list = []\n    for i in range(1,no_of_month+1):\n        if i == 1 or i == 3 or i == 5 or i == 7 or i == 8 or i == 10 or i == 12:\n            my_list.append([31])\n        elif i == 2 and is_leap_year(year):\n            my_list.append([29])  #x for x in range(1,30)\n        elif i == 2 and is_leap_year(year)==False:\n            my_list.append([28])      \n        else:",
        "detail": "W3resource.countdate",
        "documentation": {}
    },
    {
        "label": {
            "name": "",
            "kind": 2,
            "peekOfCode": "def  date_print_gt12(month,year):\n    result = []\n    # if month>12:\n    full_year = month//12\n    result = full_year_date(full_year,original_year=year)\n    extra_month = month%12\n    if extra_month != 0:\n        for i in range(1,extra_month+1):    \n            days_in_month = calendar.monthrange(year,i)[1]\n            result.append([days_in_month]) "
        },
        "kind": 2,
        "importPath": "W3resource.countdate",
        "description": "W3resource.countdate",
        "peekOfCode": "def  date_print_gt12(month,year):\n    result = []\n    # if month>12:\n    full_year = month//12\n    result = full_year_date(full_year,original_year=year)\n    extra_month = month%12\n    if extra_month != 0:\n        for i in range(1,extra_month+1):    \n            days_in_month = calendar.monthrange(year,i)[1]\n            result.append([days_in_month]) ",
        "detail": "W3resource.countdate",
        "documentation": {}
    },
    {
        "label": "full_year_date",
        "kind": 2,
        "importPath": "W3resource.countdate",
        "description": "W3resource.countdate",
        "peekOfCode": "def full_year_date(year,original_year,temp_year = 1,my_list = None):\n    if my_list is None:\n        my_list = []\n    if temp_year > year:\n        return my_list\n    for i in range(1, 13):\n        days_in_month = calendar.monthrange(original_year+temp_year-1, i)[1]\n        my_list.append([days_in_month])\n    return full_year_date(year,original_year,temp_year + 1, my_list)\nno_of_month = int(input(\"Enter no of montths: \"))",
        "detail": "W3resource.countdate",
        "documentation": {}
    },
    {
        "label": "no_of_month",
        "kind": 5,
        "importPath": "W3resource.countdate",
        "description": "W3resource.countdate",
        "peekOfCode": "no_of_month = int(input(\"Enter no of montths: \"))\nyear = int(input(\"Enter year: \"))\nif no_of_month <= 12 and no_of_month >= 1:\n    date_print_if_else(no_of_month,year)\n    date_print_module(no_of_month,year)\n    date_print_recursion(no_of_month,year)\nelse:\n    print(\"Your Month is not valid\")\ndate_print_gt12(50,2024)",
        "detail": "W3resource.countdate",
        "documentation": {}
    },
    {
        "label": "year",
        "kind": 5,
        "importPath": "W3resource.countdate",
        "description": "W3resource.countdate",
        "peekOfCode": "year = int(input(\"Enter year: \"))\nif no_of_month <= 12 and no_of_month >= 1:\n    date_print_if_else(no_of_month,year)\n    date_print_module(no_of_month,year)\n    date_print_recursion(no_of_month,year)\nelse:\n    print(\"Your Month is not valid\")\ndate_print_gt12(50,2024)",
        "detail": "W3resource.countdate",
        "documentation": {}
    }
]